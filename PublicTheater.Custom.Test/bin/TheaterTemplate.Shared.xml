<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TheaterTemplate.Shared</name>
    </assembly>
    <members>
        <member name="T:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem">
            <summary>
            Represents a package that contains children packages underneath. Expects a configuration ID in EpiServer that contains
            more specific display logic
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.BuildProperties">
            <summary>
            Override for build properties, instantiates the children packages collection and calls base
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.Remove">
            <summary>
            Override for remove on this package. Removes all children packages from the cart.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.SetItemId(System.Int32)">
            <summary>
            Sets the item ID of the master package
            </summary>
            <param name="itemId"></param>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.GetMasterKey(System.Int32)">
            <summary>
            Returns the master session key based on the MASTER_PACKAGE_KEY_FORMAT constant
            </summary>
            <returns>Key for session variable</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.GetMasterKey(System.String)">
            <summary>
            Returns the master session key based on the MASTER_PACKAGE_KEY_FORMAT constant
            </summary>
            <returns>Key for session variable</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.GetChildKey(System.String)">
            <summary>
            Returns the master session key based on the CHILD_PACKAGE_KEY_FORMAT constant
            </summary>
            <returns>Key for session variable</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.GetChildKey(System.Int32)">
            <summary>
            Returns the master session key based on the CHILD_PACKAGE_KEY_FORMAT constant
            </summary>
            <returns>Key for session variable</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.TessituraPackage">
            <summary>
            Returns the first Tessitura Package - For use in visitor group.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.ChildrenPackages">
            <summary>
            All children package line items that fall underneath this master package
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.TotalPrice">
            <summary>
            Override for total price. Calculates the total price based on the child packages
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.Quantity">
            <summary>
            Override for quantity, returns the quantity based on the first child package
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.IsRenewal">
            <summary>
            Returns whether or not the master package is a renewal
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.EpiServerConfigurationId">
            <summary>
            Sets the EpiServer Configuration ID used to describe this master package
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.UniqueKey">
            <summary>
            Unique key to differentiate master packages inside the cart
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.CartObjects.MasterPackageLineItem.IsValid">
            <summary>
            Returns whether or not the base package item is valid or not based on the number of 
            children packages and the number of packages a part of the master package
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedMOSHelper">
            <summary>
            Contains helper methods for managing  Mode of Sale
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedMOSHelper.Get">
            <summary>
            Returns the current instance of the MOS helper.
            </summary>
            <returns>MOS Helper from the object factory</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedMOSHelper.VerifySingleTicketMOS">
            <summary>
            Resets MOS back to original MOS if the current mos is in "SINGLE_TICKET_RESET_MODES_OF_SALE"
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer">
            <summary>
            Text Renderer for HTML e-mails. Contains methods for rendering an e-mail as plain text
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer">
            <summary>
            Text Renderer for e-mails. Contains methods for rendering an e-mail as plain text
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailCartRenderer.RenderCart(TheaterTemplate.Shared.CartObjects.TheaterSharedCart)">
            <summary>
            Renders the cart to a string.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailCartRenderer.FeeTypeConfiguration">
            <summary>
            Fee Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderCart(TheaterTemplate.Shared.CartObjects.TheaterSharedCart)">
            <summary>
            Based on the cart object passed in, renders all line items, fees, etc in the e-mail as plain text.
            </summary>
            <param name="cart">Cart object containing order</param>
            <returns>Plain text representation of the cart</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderSubtotal">
            <summary>
            Renders the subtotal to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderTotal">
            <summary>
            Renders the total to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderFees">
            <summary>
            Renders the fees to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPaymentPlan">
            <summary>
            Renders the current payment plans that are being applied
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPaymentPlanInstallment(Adage.Tessitura.CartObjects.PaymentPlanInstallment)">
            <summary>
            Renders an individual payment plan installment
            </summary>
            <param name="installment">Installment to render</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderSingleTickets">
            <summary>
            Renders the single tickets to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderGiftCertificates">
            <summary>
            Renders the gift certificates to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderGiftCertificateLineItem(Adage.Tessitura.CartObjects.GiftCertificateLineItem)">
            <summary>
            Renders the contribution line item to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderContributions">
            <summary>
            Renders the donations to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderFlexSubs">
            <summary>
            Renders the flex subscriptions to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderMasterPackageLineItems">
            <summary>
            Renders the master packages in the cart to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPackageLineItems">
            <summary>
            Renders the package line items in the cart to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPackageLineItem(Adage.Tessitura.BasePackageLineItem)">
            <summary>
            Renders the package line item to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPerformanceLineItem(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Boolean)">
            <summary>
            Renders the performance line item to the string builder, optionally rendering the price of the item.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.ResolveVenueName(Adage.Tessitura.CartObjects.PerformanceLineItem,TheaterTemplate.Shared.EpiServerConfig.VenueConfig)">
            <summary>
            Based on the performance, the venue configuration, returns the venue name to use for the performance line item
            </summary>
            <param name="performance">Performance To Render</param>
            <param name="venueConfig">Venue Configuration - Can be null</param>
            <returns>Resolved Venue Name</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPerformanceLineItemSection(TheaterTemplate.Shared.EpiServerConfig.VenueConfig,System.Collections.Generic.List{Adage.Tessitura.CartObjects.Ticket},System.String,Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Renders the section text for an individual performance line item
            </summary>
            <param name="venueConfig">Venue Configuration to use (can be null)</param>
            <param name="currentTickets">Tickets to print in the section</param>
            <param name="sectionDescription">The name of the section to print</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPerformancePriceTypeQuantity(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Collections.Generic.IEnumerable{Adage.Tessitura.CartObjects.Ticket})">
            <summary>
            Renders the price type section for an individual performance line item
            </summary>
            <param name="performance">Performance to render</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderPerformancePriceTypeQuantityPrice(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Collections.Generic.IEnumerable{Adage.Tessitura.CartObjects.Ticket})">
            <summary>
            Renders an individual performance's quantity and price section
            </summary>
            <param name="performance">Performance to render</param>
            <param name="block">Individual ticket block being rendered</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderCartAddOn(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Boolean)">
            <summary>
            Renders a cart add on based on the performance passed in
            </summary>
            <param name="performance">Cart add on performance item</param>
            <param name="showPrices">Whether or not to show prices</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.RenderContributionLineItem(Adage.Tessitura.ContributionLineItem)">
            <summary>
            Renders the contribution line item to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.GetMasterPackageName(TheaterTemplate.Shared.CartObjects.MasterPackageLineItem)">
            <summary>
            Returns the master package name from EpiServer based on the master package item
            </summary>
            <param name="masterItem">Master Item that contains the EpiServerConfiguration Id</param>
            <returns>Master Package Name or string.Empty</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.Cart">
            <summary>
            The cart used for rendering.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.CartAddOns">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailTextCartRenderer.PriceTypeConfiguration">
            <summary>
            Price Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.#ctor(EPiServer.Core.PageData)">
            <summary>
            Creates the HTML emailer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderPerformanceLineItemSection(TheaterTemplate.Shared.EpiServerConfig.VenueConfig,System.Collections.Generic.List{Adage.Tessitura.CartObjects.Ticket},System.String,Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Renders the section text for an individual performance line item
            </summary>
            <param name="performance">Performance to render (can be null)</param>
            <param name="venueConfig">Venue Configuration to use (can be null)</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderPerformancePriceTypeQuantity(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Collections.Generic.IEnumerable{Adage.Tessitura.CartObjects.Ticket})">
            <summary>
            Renders the price type section for an individual performance line item
            </summary>
            <param name="performance">Performance to render</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderPerformancePriceTypeQuantityPrice(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Collections.Generic.IEnumerable{Adage.Tessitura.CartObjects.Ticket})">
            <summary>
            Renders an individual performance's quantity and price section
            </summary>
            <param name="performance">Performance to render</param>
            <param name="block">Individual ticket block being rendered</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderCartAddOn(Adage.Tessitura.CartObjects.PerformanceLineItem,System.Boolean)">
            <summary>
            Renders a cart add on based on the performance passed in
            </summary>
            <param name="performance">Cart add on performance item</param>
            <param name="showPrices">Whether or not to show prices</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderTotalData(TheaterTemplate.Shared.CartObjects.TheaterSharedCart)">
            <summary>
            Renders the total to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderFees">
            <summary>
            Renders the fees to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderSubtotal">
            <summary>
            Renders the subtotal to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderTotal">
            <summary>
            Renders the total to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderPaymentPlan">
            <summary>
            Renders the current payment plans that are being applied
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderPaymentPlanInstallment(Adage.Tessitura.CartObjects.PaymentPlanInstallment)">
            <summary>
            Renders an individual payment plan installment
            </summary>
            <param name="installment">Installment to render</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderGiftCertificateLineItem(Adage.Tessitura.CartObjects.GiftCertificateLineItem)">
            <summary>
            Renders the contribution line item to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderContributionLineItem(Adage.Tessitura.ContributionLineItem)">
            <summary>
            Renders the contribution line item to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderMasterPackageLineItems">
            <summary>
            Renders the master packages in the cart to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.RenderPackageLineItem(Adage.Tessitura.BasePackageLineItem)">
            <summary>
            Renders the package line item to the string builder.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailHtmlCartRenderer.GetHtmlBody(System.String)">
            <summary>
            This method gets the full HTML body string including header, footer, and images
            </summary>
            <param name="templateString"></param>
            <returns></returns>
        </member>
        <member name="T:TheaterTemplate.Shared.CartObjects.TheaterSharedCart">
            <summary>
            Override for Cart Object - contains shared project logic
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.RENEWAL_ORIGINAL_PACKAGE_KEY">
            <summary>
            Original Package Name Key - Format Key of: Renewal_Original_Name_{0}
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.RENEWAL_ORIGINAL_SEATS_KEY">
            <summary>
            Original Package Seats Key - Format Key of: Renewal_Original_Seats_{0}
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.RENEWAL_ADDITIONAL_CHANGE">
            <summary>
            Additional changes - Format Key of: Renewal_Additional_Change_{0}
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.RENEWAL_ADDITIONAL_NOTES">
            <summary>
            Additional notes - Format Key of: Renewal_Additional_Notes_{0}
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.Fill(System.Data.DataSet,System.String)">
            <summary>
            Override for fill. Handles building master packages
            </summary>
            <param name="dataSet">DataSet from cart</param>
            <param name="sessionKey">Current Session Key</param>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.FillMasterPackageItems">
            <summary>
            Based on the PackageLineItems in the cart, see if any are a part of a master package
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.GetMasterPackageItem(System.String,Adage.Tessitura.TessSession,System.String)">
            <summary>
            Returns a master key item from the current cart line items or if it doesn't exist yet, creates one, adds it to the current cart and returns it.
            </summary>
            <param name="key">Key use to find session variable</param>
            <returns>Existing MasterPackageLineItem or newly created one.</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.ShippingMethodPostal">
            <summary>
            This retrieves the postal shipping method from the config key SHIPPING_METHOD_POSTAL
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.ShippingMethodPrintAtHome">
            <summary>
            This retrieves the PAH shipping method from the config key SHIPPING_METHOD_PAH
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.BuildSectionText(TheaterTemplate.Shared.EpiServerConfig.VenueConfig,System.Collections.Generic.List{Adage.Tessitura.CartObjects.Ticket},System.String)">
            <summary>
            Based on the performance line item passed in, build the section text from the ticket blocks of the performance line item and the selected zone
            </summary>
            <param name="perfLineItem">Current Performance line item containing ticket</param>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCart.BuildSectionText(TheaterTemplate.Shared.EpiServerConfig.VenueConfig,Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Based on the performance line item passed in, build the section text from the ticket blocks of the performance line item and the selected zone
            </summary>
            <param name="perfLineItem">Current Performance line item containing ticket</param>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BasePaymentControl">
            <summary>
            Base Payment Control - Contains shared session items and EpiServer properties
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePaymentControl.CurrentUser">
            <summary>
            Returns the currently logged in user
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePaymentControl.CurrentCart">
            <summary>
            Returns the current cart
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePaymentControl.PaymentPageContent">
            <summary>
            Returns the Payment Page Content configuration from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePaymentControl.JavaScriptFile">
            <summary>
            Path to associated javascript file
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig">
            <summary>
            Class representing a Cart Content Page in EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory">
            <summary>
            Base Factory for Populating objects from EpiServer. Contains utility methods for parsing.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.Fill">
            <summary>
            Fills the object based on the EpiServer page object passed in
            </summary>        
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object from within a lock
            </summary>
            <param name="configPage">Page from which to fill the object</param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetFilledConfig``1(System.Int32)">
            <summary>
            Generic method to get, fill and return a config object.
            </summary>
            <typeparam name="T">The type of the object to be filled and returned</typeparam>
            <param name="pageId">The ID of the config page</param>        
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetList``1(EPiServer.Core.PageData,System.String)">
            <summary>
            Returns a list of Type V parse from the page data and the property passed in.
            Returns null if not found
            </summary>
            <typeparam name="V">Type to parse into the list</typeparam>
            <param name="pageData">Page data to search in</param>
            <param name="propertyName">Property name to search for</param>
            <returns>List of type V</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetList``1(System.String)">
            <summary>
            Returns a list of type V based on the comma seperated string passed in.
            </summary>
            <typeparam name="V">Type that the list shoudl be parsed into</typeparam>
            <param name="commaSeperateList">Comma seperate list of values</param>
            <returns>List of Type V</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.ParseTypedValue``1(System.String)">
            <summary>
            Based on value passed in, parses it into type T.
            </summary>
            <typeparam name="T">Type to parse the value into</typeparam>
            <param name="currentValue">Value to be parsed</param>
            <returns>String Value parsed into type T</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetDictionary``2(TheaterTemplate.Shared.EpiServerProperties.KeyValueList)">
            <summary>
            From the passed in KeyValueListList parsed out the values of each Key Value Pair
            into a dictionary of type T and V.
            </summary>
            <typeparam name="T">Key for the dictionary</typeparam>
            <typeparam name="V">Value for the dictionary</typeparam>
            <param name="containerList">List of key value List</param>
            <returns>Dictionary of values</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetStringValue(EPiServer.Core.PageData,System.String)">
            <summary>
            Based on the page data passed in and the property name, either returns the string value of the
            property if it exists, returns string.empty otherwise.
            </summary>
            <param name="pageDate">Page Data that contains the property</param>
            <param name="propertyName">Property name to search for</param>
            <returns>The string value if the property exists, string.empty otherwise</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetIntValue(EPiServer.Core.PageData,System.String)">
            <summary>
            Based on the page data passed in and the property name, either returns the integer of the
            property if it exists, returns 0 otherwise
            </summary>
            <param name="pageDate">Page Data that contains the property</param>
            <param name="propertyName">Property name to search for</param>
            <returns>Integer value of the property or 0</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetIntValueFromVisitorGroup(EPiServer.Core.PageData,System.String)">
            <summary>
            Gets an integer value from a visitor group field. If not found, defaults to 0.
            </summary>
            <param name="pageData">PageData containing property</param>
            <param name="propertyName">Name of property evaluate</param>
            <returns>Returns the visitor group value of the property or 0 if not found</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetIntValueFromVisitorGroup(EPiServer.Core.PageData,System.String,System.Int32)">
            <summary>
            Gets an integer value from a visitor group field. If not found, defaults to the value passed in.
            </summary>
            <param name="pageData">PageData containing property</param>
            <param name="propertyName">Name of property evaluate</param>
            <param name="defaultValue">Default value if not found</param>
            <returns>Returns the visitor group value of the property or default value passed in</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetBoolValue(EPiServer.Core.PageData,System.String)">
            <summary>
            Based on the page data passed in and the property name, either returns the boolean of the
            property if it exists, returns false otherwise
            </summary>
            <param name="pageDate">Page Data that contains the property</param>
            <param name="propertyName">Property name to search for</param>
            <returns>Boolean value of the property or false</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetBoolValueFromVisitorGroup(EPiServer.Core.PageData,System.String)">
            <summary>
            Based on the vistor group property, returns true if the value is "Yes" and false in
            all other cases.
            </summary>
            <param name="pageData">Page Data to search on</param>
            <param name="propertyName">Property name containing visitor group value</param>
            <returns>True if value is yes, false in all other cases</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetBoolValueFromVisitorGroup(EPiServer.Core.PageData,System.String,System.Boolean)">
            <summary>
            Based on the vistor group property, returns true if the value is "Yes" and false if the value is "No". If 
            the value is not set, returns the default vlue
            </summary>
            <param name="pageData">Page Data to search on</param>
            <param name="propertyName">Property name containing visitor group value</param>
            <param name="defaultValue">Value to return if paremeter is not set</param>
            <returns>True if value is yes, false if "No" and the default value in other cases</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetStringValueFromVisitorGroup(EPiServer.Core.PageData,System.String,System.Boolean)">
            <summary>
            Based on the vistor group property, returns string value if evaluated, string.Empty otherwise
            </summary>
            <param name="pageData">Page Data to search on</param>
            <param name="propertyName">Property name containing visitor group value</param>
            <param name="stripHtml">Whether or not to strip out html from the return value</param>
            <returns>Value if evaluated, string.Empty otherwise</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetImageUrl(System.String)">
            <summary>
            Based on the image URL passed in and the PREPEND_IMAGE_URL configuration value,
            either returns the URL or prepends BASE_IMAGE_URL configuration value into the url.
            </summary>
            <param name="imageUrl">Relative URL link</param>
            <returns>Image URL</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetNullableDateTime(EPiServer.Core.PageData,System.String)">
            <summary>
            Returns a nullable date time based on the pagedata passed in and the property name. Will return null if not found
            </summary>
            <param name="pageData">Page Data to search for property on</param>
            <param name="propertyName">Name of property to search for</param>
            <returns>DateTime or null if not found</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.GetIdFromPageReference(EPiServer.Core.PageData,System.String)">
            <summary>
            Parses an object of type PropertyPageReference out of the properties of the page data and returns 
            its page link id. If not found, returns 0
            </summary>
            <param name="pageData">Page Data to search for Page Reference</param>
            <param name="propertyName">Property Name of Page Reference</param>
            <returns>Page Link ID on the page reference</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.PageId">
            <summary>
            Config page ID in EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigFactory.Filled">
            <summary>
            Whether or not the Config has been filled
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.#ctor">
            <summary>
            Default constructor - sets fields to string empty.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.GetCartContentConfig(System.Int32)">
            <summary>
            Based on the content page id passed in, returns a populated cart content config object
            </summary>
            <param name="cartContentPageId">Page Id of content page in EpiServer</param>
            <returns>Populated Content Page</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.GetCartContentConfig``1">
            <summary>
            Gets the page data from EpiServer and fills the object based on the page Id passed in
            </summary>
            <param name="exchangePageId">EPiServer Page ID for the template</param>
            <returns>Populated config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills within a lock block
            </summary>
            <param name="cartContentPageData">Cart content page reference from EpiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.Header">
            <summary>
            Header text for cart page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.EmptyCartText">
            <summary>
            Empty cart text for cart page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.ContinueShopping">
            <summary>
            Buttons within continue shopping button. Based upon
            the currently active visitor group
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.TimerText">
            <summary>
            Text with string format replace for the expiration area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.TicketsExpired">
            <summary>
            Error message displayed on the cart page when the user's tickets have expired
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.AddOnReserveError">
            <summary>
            Error message for when there is an error reserving add ons
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.ShowVenueLinks">
            <summary>
            Whether or not to show the vanue links on the cart page.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.PerformanceHeader">
            <summary>
            Header that displays above the performance description. Based upon the currently active visitor group.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.DateHeader">
            <summary>
            Header displayed above the performance date area. Based upon the currently active visitor group.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.VenueHeader">
            <summary>
            Header displayed above the performance venue area. Based upon the currently active visitor group.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.TicketHeader">
            <summary>
            Header displayed above the ticket description area. Based upon the currently active visitor group.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.SeatingHeader">
            <summary>
            Header displayed above the seating description area. Based upon the currently active visitor group.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.DonationHeader">
            <summary>
            Text displayed above the donation description area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.DonationTotalHeader">
            <summary>
            Text displayed above the donation total area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.ExchangePerformanceHeader">
            <summary>
            Text displayed above the donation total area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.AdditionalExchangePerformanceHeader">
            <summary>
            Text displayed above the donation total area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.DonationThankYouText">
            <summary>
            Text displayed below the donation header area in the cart
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.GiftCertificateHeader">
            <summary>
            Text displayed above the gift cert area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.GiftCertificateTotalHeader">
            <summary>
            Text displayed above the gift cert total area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartContentConfig.GiftCertificateText">
            <summary>
            Text displayed below the gift cert text in the cart
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig">
            <summary>
            Represents the ExchangeConfig Template page type from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.#ctor">
            <summary>
            Default constructor - Sets default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.GetExchangeConfig(System.Int32)">
            <summary>
            Gets the page data from EpiServer and fills the object based on the page Id passed in
            </summary>
            <param name="exchangePageId">EPiServer Page ID for the template</param>
            <returns>Populated config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.GetExchangeConfig``1">
            <summary>
            Gets the page data from EpiServer and fills the object based on the page Id passed in
            </summary>
            <param name="exchangePageId">EPiServer Page ID for the template</param>
            <returns>Populated config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object with the data from EPiSErver
            </summary>
            <param name="exchangePage">Page Data from EPiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.ExchangeHeader">
            <summary>
            Header displayed on the exchange page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.ExchangeInstructions">
            <summary>
            Body displayed on the exchange page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.ExchangeFooter">
            <summary>
            Footer displayed on the exchange page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.PerformanceAreaHeader">
            <summary>
            Header displayed above the performance ticket history area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.ExchangeMessageList">
            <summary>
            Messages based on the number of days before the perfomrance
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.AllowedSeasonIds">
            <summary>
            Season Ids that are allowed to be displayed on the ticket history page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.AllowedPriceTypeIds">
            <summary>
            Price type Ids that are allowed to be displayed on the ticket history page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.ExcludedPriceTypeIds">
            <summary>
            Price type Ids that are excluded for exchange
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.HiddenPerformanceIds">
            <summary>
            Performance Ids that are hidden from the ticket history area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ExchangeConfig.HiddenProductionSeasonIds">
            <summary>
            Production Season Ids that are hidden from the ticket history page
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay">
            <summary>
            Represents an individual day on a calendar
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.#ctor">
            <summary>
            Protected constructor - Instantiates collection of performances
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.Fill(Adage.Tessitura.Performances,System.DateTime)">
            <summary>
            Fills the current day with the performances that match the day
            </summary>
            <param name="currentPerformances">CurrentPerformances</param>
            <param name="day">DateTime representation of the day</param>        
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.OnSale(Adage.Tessitura.Performance)">
            <summary>
            Searches through the Calendar Days' local collection of performances on sale to verify that the
            performance passed in is on sale or not.
            </summary>
            <param name="performance">Performance to check</param>
            <returns>Performance On Sale object for the current performance.</returns>
            <remarks>Throws an Application Exception if not found in the local collection</remarks>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.FillFromDay(TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay)">
            <summary>
            Fills from the individual day
            </summary>
            <param name="day">Day to fill from</param>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.Performances">
            <summary>
            List of performances for a given day
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.CurrentDayPerformancesOnSale">
            <summary>
            Local collection of Performance On Sale for the performances associated with the calendar day
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.CurrentDate">
            <summary>
            The integer representation of the current day
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.Filled">
            <summary>
            Whether or not the day has been filled
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.IsPreviousMonth">
            <summary>
            Whether or not the day has been filled using the previous month
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.IndividualCalendarDay.IsNextMonth">
            <summary>
            Whether or not the day has been filled using the nexth month
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PriceTypeConfig">
            <summary>
            Class represeneting a Price Type Configuration Page Type in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PriceTypeConfig.GetPriceTypeConfig(System.Int32)">
            <summary>
            Based on the EpiServer Page Id passed in, populate the PriceTypeConfig object and return
            </summary>
            <param name="configurationId">Page Id of Price Type Config Page in EpiServer</param>
            <returns>Populated PriceTypeConfig</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PriceTypeConfig.#ctor">
            <summary>
            Constructor - Instantiates PriceTypeNames
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PriceTypeConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the price type configuration object from page data is EpiServer
            </summary>
            <param name="priceTypePage">Page Data from EpiServer</param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PriceTypeConfig.GetPriceTypeLabel(Adage.Tessitura.PriceType)">
            <summary>
            If the price type id exists in the PriceTypeNames collection, then return that value, otherwise return the
            price type description
            </summary>
            <param name="priceType">Price Type to search for</param>
            <returns>Name from EpiServer if found, price type description otherwise</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PriceTypeConfig.PriceTypeNames">
            <summary>
            A dictionary of price type Ids and their names
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig">
            <summary>
            Class representing the Payment/Confirmation content page in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.#ctor">
            <summary>
            Protected constructor - Set's default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.GetPaymentConfirmContent(System.Int32)">
            <summary>
            Retrieves payment confirm config from Cache or EpiServer.
            </summary>
            <param name="contentId">Content Id to populate</param>
            <returns>Populated Payment Confirm Content Config</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object from EpiServer
            </summary>
            <param name="paymentConfirmData">EpiServer page data</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.Header">
            <summary>
            Header value
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.PaymentInfoHeader">
            <summary>
            Payment information header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.BillingAddressInfoHeader">
            <summary>
            Billing address header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.DeliveryMethodHeader">
            <summary>
            Delivery Method header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.OrderCommentsHeader">
            <summary>
            Delivery method header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.OrderCommentsDescription">
            <summary>
            Order comments description
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.InvalidCreditCardType">
            <summary>
            Invalid credit cart type error
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.CheckoutError">
            <summary>
            Checkout error
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.GiftCertificateLabel">
            <summary>
            Gift Certificate Label - Displays next to gift certificate
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.GiftCertificateDescription">
            <summary>
            Gift Certificate description - Displays below gift certificate area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.GiftCertificateApplied">
            <summary>
            Gift Certificate Applied - Displays after gift certificate has been applied
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.InvalidGiftCertificate">
            <summary>
            Invalid Gift Certificate error message
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.GiftCertificateEmpty">
            <summary>
            Error message to display when the gift certificate applied is empty
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.InvalidBillingAddressText">
            <summary>
            Text to be displayed to a user when they have an invalid billing address associated
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ConfirmationThankYou">
            <summary>
            Confirmation page thank you message
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.NextStepsText">
            <summary>
            Next steps message
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.PaymentPlansAllowed">
            <summary>
            Comma seperated string of payment plans allowed
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.PaymentPlanDisplayEstimates">
            <summary>
            Whether or not to display payment plan estimates
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.PaymentPlanSignupText">
            <summary>
            Sign up for payment plan text
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.PaymentPlanInformation">
            <summary>
            Information about the current payment plan
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.TempAccountHeader">
            <summary>
            Header for use in the temporary account area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.TempAccountDescription">
            <summary>
            Description for use in the temporary account area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ShowRedeemGiftCert">
            <summary>
            String containing "false" if not to show gift cert redemption panel
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ShowDeliveryMethod">
            <summary>
            Whether or not to show the delivery method on the payment/confirm pages
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ShowDonationAsk">
            <summary>
            Whether or not to show the donation ask on the payment page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ContributionFundId">
            <summary>
            Fund ID to use for contributions. 
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ContributionAccountMethodId">
            <summary>
            Account method id to use.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.SuggestedDonationLabel">
            <summary>
            Label displayed next to the suggested donation
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.DonationAskDescriptionText">
            <summary>
            Description text displayed below the donation ask area.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.DonationStoredProcId">
            <summary>
            ID to use for donation formula
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.DonationUserAttributeKeywordNumber">
            <summary>
            Keyword that will contain the amount to use for the suggest formula
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.DonationUserAttributeRemoval">
            <summary>
            Whether or not to remove attribute if the user donates the correct amount
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.Formula">
            <summary>
            Javascript formula to use for the suggested donation
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.InvalidDonationError">
            <summary>
            Error displayed when an invalid donation is added on the payment page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ErrorAddingDonation">
            <summary>
            Error displayed when the donation fails to add to the cart.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.SourceNumberOverride">
            <summary>
            The source number to override to based on visitor groups
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.SourceNumberStoredProcId">
            <summary>
            A stored procedure ID for getting the proper source number for this order
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.SourceNumberDefaults">
            <summary>
            A list or source code numbers that are considered default which can be overriden by the Override
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PaymentConfirmContentConfig.ConfirmationEmailIds">
            <summary>
            This is a list of confirmation email Id's that should be used during checkout
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig">
            <summary>
            Edit Renewal Config - Represents the Renewal Edit Page Type from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.#ctor">
            <summary>
            Protected Constructor - Sets default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.GetConfig(System.Int32)">
            <summary>
            Gets/Populates the edit renewal config based on the episerver page id passed in.
            </summary>
            <param name="pageId">Page ID in EPiServer</param>
            <returns>Populated Edit Renewal Config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the renewal object with the page data passed in
            </summary>
            <param name="page">Edit Renewal Page from EPiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.Heading">
            <summary>
            Heading for the Renewal Edit Page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.MainBody">
            <summary>
            Main Body for the Renewal Edit Page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.ConfirmationMessage">
            <summary>
            Message displayed when the user edits their renewal
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.PackageChoices">
            <summary>
            List of packages that the user can make as alternate choice
            on the renewal edit page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.SeatingUpgradeChoices">
            <summary>
            Choices that don't put in an alternate change request, but are included in the CSI
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.AddSeatingOptions">
            <summary>
            Choices for when a seat is added during a renewal.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.AllowedPriceTypes">
            <summary>
            Price types allowed for the renewal path
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EditRenewalConfig.CsiId">
            <summary>
            If CSI page is set in EPiServer, this returns the page ID associated
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseStandaloneContributeControl">
            <summary>
            Contains shared contribute control properties
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseStandaloneContributeControl.ContributeConfiguration">
            <summary>
            Contribute page configuration from EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.WebControls.CalendarMonthUpdated">
            <summary>
            Delgate that defines the signature for when an calendar month is changed on the calendar page
            </summary>
            <param name="newMonth">Month changed to</param>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.CalendarWeeks">
            <summary>
            Represents a collection of calendar weeks.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarWeeks.GetNewWeek">
            <summary>
            Returns a new instance of calendar week
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.FriendPerformance">
            <summary>
            Facebook Performance
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.CartObjects.TheaterSharedCustomerServiceIssue">
            <summary>
            Override for Customer Service Issue - Allows for specific EPiServer data to be passed
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCustomerServiceIssue.SendNow">
            <summary>
            Override for send now - Allows appending additional CSI info from EPi
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCustomerServiceIssue.SendWithNotes">
            <summary>
            Properly formats Notes before sending to Tessitura.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCustomerServiceIssue.NotesToPlainText">
            <summary>
            Returns a single string, seperated by new lines, of the Notes
            </summary>
            <returns>A single string representing the Notes</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCustomerServiceIssue.NotesToPlainTextList">
            <summary>
            Parses the Notes object and returns a List of key-values (as a 2D array)
            </summary>
            <returns>A list of arrays of size[2] containing the data.</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.CartObjects.TheaterSharedCustomerServiceIssue.camelCaseToWords(System.String)">
            <summary>
            Converts a CamelCase string to seperated words
            </summary>
            <param name="str">The string to break up into words</param>
            <returns></returns>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseRenewalEditControl">
            <summary>
            Base Renewal Edit Control - Contains shared functioanlity for the renewal edit control
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseRenewalEditControl.EditRenewalConfigPage">
            <summary>
            Edit eenewal config page populated from EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseRenewalEditControl.CurrentCart">
            <summary>
            Returns the currently active cart
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseRenewalEditControl.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PageFilterCollection">
            <summary>
            Represents the "LeftPanelOptions" that contain page level filters
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PageFilterCollection.#ctor">
            <summary>
            Default Constructor - Instantiates individual filters
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PageFilterCollection.GetPageFilterCollection(System.Int32)">
            <summary>
            Based on the config Id passed in, fill the page filter collection and return
            </summary>
            <param name="configId">EpiServer ID of page filter</param>
            <returns>Populated page filter collection</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PageFilterCollection.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the collection with all available page filters
            </summary>
            <param name="filterCollectionData">Page Data from EpiServer containing TitledKeyValuePairListList</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PageFilterCollection.Filters">
            <summary>
            Collection of page filters
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PageFilter">
            <summary>
            Represents an individual page filter container from EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PageFilter.#ctor">
            <summary>
            Default constructor - Instantiates default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PageFilter.FillFromLock(TheaterTemplate.Shared.EpiServerProperties.TitledKeyValuePairList)">
            <summary>
            Fills the individiual filter object with the EpiServer populated property
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PageFilter.Filled">
            <summary>
            Whether or not the Config has been filled
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PageFilter.Title">
            <summary>
            Title of the filter
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PageFilter.Type">
            <summary>
            Filter Display Type - How to display the filter on the page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PageFilter.FilterKeyValues">
            <summary>
            Collection of key-value pairs for the page filter
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PageFilterDisplayType">
            <summary>
            Represents the display type of a page filter
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.EpiServerConfig.PageFilterDisplayType.Checkbox">
            <summary>
            Display as a checkbox
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.EpiServerConfig.PageFilterDisplayType.Radio">
            <summary>
            Display as a radio button
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.WebControls.GroupRadioButton">
            <summary>
            GroupRadioButton control is a standard radio-button with the extended 
            abilities to be used in groups.
            </summary>
            <remarks>
            Standard <see cref="T:System.Web.UI.WebControls.RadioButton"/> controls 
            cannot be grouped when are placed at the different rows of the DataGrid, 
            DataList, Repeater, etc. controls. 
            
            The "name" attribute of the radio button HTML control that is rendered 
            at the web form after RadioButton control has been executed is depend 
            on the UniqueID of the RadioButton. So for the different rows of the 
            DataGrid/DataList/Repeater these attributes are different and radio 
            buttons do not belong to the same group.
            </remarks>	
        </member>
        <member name="P:TheaterTemplate.Shared.WebControls.GroupRadioButton.Value">
            <summary>
            This is the value assigned to this radio button.  In client-side code it will be combined with the UniqueID
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicGenerator.CreateGiftCertificateGraphic(TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail)">
            <summary>
            Creates an gift certificate graphic based on the properties 
            of the GiftCertificateEmail object
            </summary>
            <returns>
            Image object with text drawn on it
            </returns>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicGenerator.GetImageStream(System.String)">
            <summary>
            Opens the image file and returns a stream object for it
            </summary>
            <param name="imagePath">
            relative file path to where the image is stored
            </param>
            <returns>
            Stream object for the image file
            </returns>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicGenerator.DrawText(System.Reflection.PropertyInfo,System.Drawing.Graphics,TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail)">
            <summary>
            Places value of the property on the graphic at the location specified by the config file
            </summary>
            <param name="property">
            property object encapsulating info about a property of the GiftCertificateEmail object
            </param>
            <param name="graphic">
            graphic object to draw on
            </param>
            <param name="certificateInfo">
            encapsulation of data values for the certificate graphic
            </param>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicGenerator.GraphicOptions">
            <summary>
            Object encaspulating an XML file describing the data to place 
            on the gift certificate, where to place it, and how it 
            should look
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.CartObjects.TheaterSharedCartLineItems">
            <summary>
            Override for CartLineItems - 
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseFlexPerformanceSelectionControl">
            <summary>
            Base Flex Performance Control - Contains Flex Package variables, session items, and shared configuration items
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexPerformanceSelectionControl.CurrentFlexPackage">
            <summary>
            The currently bound flex package based on the PackageID parameter
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexPerformanceSelectionControl.PriceTypeConfiguration">
            <summary>
            Price Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexPerformanceSelectionControl.CurrentSeasonPlayDetails">
            <summary>
            Returns the play details collection populated by the current season page id
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexPerformanceSelectionControl.ConfigId">
            <summary>
            Returns the config ID of the current package in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexPerformanceSelectionControl.CurrentPackageConfig">
            <summary>
            The current package configuration object populated from EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseAddressControl.CurrentUser">
            <summary>
            Returns the currently logged in user
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseAddressControl.JavaScriptFile">
            <summary>
            Path to associated javascript file
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseAddressControl.PaymentPageContent">
            <summary>
            Returns the Payment Page Content configuration from EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CourseDetailCollection">
            <summary>
            Collection of Course Detail Templates based on the "folder" ID in Tessitura containing course details
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigCollection`1.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Override that fills the collection from within a lock
            </summary>
            <param name="configPage">Root page of the collection</param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigCollection`1.FillCollectionFromLock">
            <summary>
            Fills the collection from within a lock.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigCollection`1.FillIndividual(EPiServer.Core.PageData)">
            <summary>
            Creates and fills an individual item, and adds it to the collection.
            </summary>
            <param name="configPage">Page from which to create the item</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.EpiServerBaseConfigCollection`1.Items">
            <summary>
            A generic list of the items in the collection
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseDetailCollection.#ctor">
            <summary>
            Default Constructor - Instantiates collection
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseDetailCollection.GetCourseDetailByTessituraId(System.Int32)">
            <summary>
            Returns the course detail associated with the tessitura Id passed in. Returns null if not found
            </summary>
            <param name="tessituraID">Tessitura Id to search for</param>
            <returns>Course detail associated with the tessitura Id or null if not found</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseDetailCollection.GetCourseDetailByEpiServerId(System.Int32)">
            <summary>
            Returns the course detail associated with the episerver Id passed in. Returns null if not found
            </summary>
            <param name="tessituraID">Episerver Id to search for</param>
            <returns>Course detail associated with the Episerver Id or null if not found</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseDetailCollection.GetCourseDetailCollection(System.Int32)">
            <summary>
            Get and populates the course detail collection based on the folder ID passed in.
            </summary>
            <param name="folderID">Folder ID in EpiServer</param>
            <returns>Populated course detail collection</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetailCollection.CourseDetails">
            <summary>
            List of course details populated from EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CourseDetail">
            <summary>
            Represents an individual course detail template page from EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.#ctor">
            <summary>
            default constructor - Set's default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the course detail object with the data from EpiServer
            </summary>
            <param name="courseData">EpiServer page detail</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.TessituraId">
            <summary>
            Performance Id of the course in Tessituara
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.CourseImage">
            <summary>
            Image to display on the course detail page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.Header">
            <summary>
            Header to display on the course detail page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.ShortDescription">
            <summary>
            Short description of the course to display on the course list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.LongDescription">
            <summary>
            Long description of the course to display on the course details page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.RegisterButtonText">
            <summary>
            Text to display on the register button
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.LearnMoreURL">
            <summary>
            URL for the course details page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseDetail.TemplateURL">
            <summary>
            Get's the template URL From EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseCartControl">
            <summary>
            Base Cart Control - Contains shared functionality for cart controls
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseCartControl.BindPage">
            <summary>
            Binds the cart control on the page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.CurrentCart">
            <summary>
            The currently loaded cart from Tessitura
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.CartAddOnCollection">
            <summary>
            Returns the Cart Add on collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.FeeTypeConfiguration">
            <summary>
            Fee Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.CartContentPage">
            <summary>
            Reference to the Cart Page Content configuratio object populated from EpiServer.
            Uses the CartContentId property as the Id to use
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.ShowRemoveButton">
            <summary>
            Whether or not to display the remove button for the current line item
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCartControl.CurrentTimer">
            <summary>
            Returns the currently active seat server timer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseCartControl.CartChangedEventArgs">
            <summary>
            Event Args that indicate the cart has been changed
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage">
            <summary>
            Custom Template Page - Allows overridding of template page is use via a website setting
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.#ctor">
            <summary>
            Default Constructor - No Action
            </summary>
            
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.OnLoad(System.EventArgs)">
            <summary>
            OnLoad - Sets up the On-Edit custom functionality
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.OnPreLoad(System.EventArgs)">
            <summary>
            Sets all properties on the page to have the correct page link ID
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.EpiPageAppSettingString">
            <summary>
            Returns the string representation of the current page type with EpiPageId appended at the end
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.OverrideCurrentPage">
            <summary>
            Whether or not to override current base page functionality - Returns true by default
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.CurrentPage">
            <summary>
            Returns the current page data based on the EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.CurrentPageLink">
            <summary>
            Returns the current page link based on the EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.BaseCurrentPage">
            <summary>
            Returns the base current page data based on the EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.BaseCurrentPageLink">
            <summary>
            Returns the base current page link based on the EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.CMSPage">
            <summary>
            Populates the CMS page based on the current EpiPage
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.EpiPage">
            <summary>
            Retursn the current page reference based on EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage.EpiPageId">
            <summary>
            Current Page ID
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.#ctor">
            <summary>
            Default Constructor - No Action
            </summary>
            
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.OnLoad(System.EventArgs)">
            <summary>
            OnLoad - Sets up the On-Edit custom functionality
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.OnPreLoad(System.EventArgs)">
            <summary>
            Sets all properties on the page to have the correct page link ID
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.EpiPageAppSettingString">
            <summary>
            Returns the string representation of the current page type with EpiPageId appended at the end
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.OverrideCurrentPage">
            <summary>
            Whether or not to override current base page functionality - Returns true by default
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.CurrentPage">
            <summary>
            Returns the current page data based on the EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.CurrentPageLink">
            <summary>
            Returns the current page link based on the EpiPageAppSettingString
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.CMSPage">
            <summary>
            Populates the CMS page based on the current EpiPage
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplatePage`1.EpiPage">
            <summary>
            Retursn the current page reference based on EpiPageAppSettingString
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.FriendUser">
            <summary>
            Facebook user
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.FriendUser.GetUpcomingPerformances">
            <summary>
            Gets the user's upcoming performances they've made a reservation fro
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.FriendUser.GetProductionPerformances(TheaterTemplate.Shared.PerformanceObjects.FriendProduction)">
            <summary>
            Gets performances for a production, where there are friends attending the performance
            </summary>
            <param name="friendProduction"></param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.FriendUser.SaveReservation(TheaterTemplate.Shared.PerformanceObjects.FriendReservation)">
            <summary>
            Saves a reservation's sharing info
            </summary>
            <param name="reservation"></param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.FriendUser.SaveEvent(TheaterTemplate.Shared.PerformanceObjects.FriendEvent)">
            <summary>
            saves a user's facebook event
            </summary>
            <param name="evt"></param>
            <returns></returns>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject">
            <summary>
            Contains email properties populated from EpiServer
            for the gift certificate email
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedEmailObject">
            <summary>
            Theater Shared E-mail object - Contains e-mail properties populated from EpiServer
            based upon visitor group data. Renders the e-mail using the render classes
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.Render(EPiServer.Core.PageData,Adage.Tessitura.Cart,Adage.Tessitura.User)">
            <summary>
            Renders the cart
            </summary>
            <param name="CMSEmailPage">The EPiServer page to use as the email template.</param>
            <param name="cart">The cart to render.</param>
            <param name="currentUser">The current user of the cart.</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.SetupClassVariables(EPiServer.Core.PageData,Adage.Tessitura.Cart,Adage.Tessitura.User)">
            <summary>
            Sets up class variables 
            </summary>
            <param name="CMSEmailPage">CMS Page to use as E-mail Template</param>
            <param name="cart">Cart to use to render cart item</param>
            <param name="currentUser">Current User</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.FillEmailBody">
            <summary>
            Fills the e-mail body based on the HTML Template field, any placeholders, and the current cart
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.GetRenderer">
            <summary>
            Gets the EmailCartRenderer to use for rendering the cart. Overload to return other renderers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.SendMessage">
            <summary>
            Sends the email message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.GetMessage">
            <summary>
            Returns the email message as a MailMessage object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.AddMessageVariables(System.Net.Mail.MailMessage,System.String)">
            <summary>
            Builds the e-mail message based on the e-mail address passed in.
            </summary>
            <param name="message">Message to populate</param>
            <param name="emailToUse">E-Mail for To Address</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.HandlePlaceHolderTags(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Sorts through the templateString, finding all the regexSpan matches, and replacing with values based on their class and id attributes.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.RemoveCRorLF(System.String)">
            <summary>
            Removes or replaces carriage returns and line feeds in input string and returns the result
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.StripHtmlAndCRLF(System.String)">
            <summary>
            Removes or replaces carriage returns, HTML, and line feeds in input string and returns the result
            </summary>
            <param name="input">Input to affect</param>
            <returns>String with HTML and CRLF removed</returns>    
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.GetCodeProperty(System.String)">
            <summary>
            Returns a string containing the requested item. e.g. (input: "ACCOUNTEMAIL" | output: "CurrentUser@domain.com")
            </summary>        
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.RenderAddress(Adage.Tessitura.UserObjects.UserAddress)">
            <summary>
            Renders a user address into a string
            </summary>
            <param name="addressToRender">Address to render</param>
            <returns>Address in string form</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.Subject">
            <summary>
            E-Mail subject line
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.Body">
            <summary>
            E-Mail Body
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.To">
            <summary>
            To E-mail address
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.From">
            <summary>
            From E-mail Address
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.Bcc">
            <summary>
            Bcc E-mail address
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedEmailObject.IsHTML">
            <summary>
            Whether or not the e-mail is rendered as HTML
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.#ctor">
            <summary>
            Default public constructor
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.FillEmailBody">
            <summary>
            The gift certificate email has no substitutions, so just set the header and 
            footer html
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.GetMessage">
            <summary>
            Create an alternate view with the gift certificiate 
            placed in the template and create a mail message containing the view
            </summary>
            <returns>MailMessage object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.AddMessageVariables(System.Net.Mail.MailMessage,System.String)">
            <summary>
            Builds the e-mail message based on the e-mail address passed in.
            </summary>
            <param name="message">Message to populate</param>
            <param name="emailToUse">E-Mail for To Address</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.AttachImage(System.Net.Mail.MailMessage)">
            <summary>
            Create the attachment and linked resource for the gift 
            certificate image
            </summary>
            <param name="message">MailMessage object</param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.SetMessageRecipient(System.String)">
            <summary>
            Needed to override the protected set on the To parameter of the message since 
            the recipient for the certificate is not necessarily the sender
            </summary>
            <param name="recipientEmail">string email of the intended recipient</param>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.GiftCertificateImage">
            <summary>
            Used to set the image that will be placed in the email template
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.HtmlHeader">
            <summary>
            HTML for the header of the email
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateEmailObject.HtmlFooter">
            <summary>
            HTML for the footer of the email
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.ApplyGiftCertificate(System.Decimal)">
            <summary>
            Applies either the amount passed in or the balance of the gift certificate, whichever is smaller.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.Number">
            <summary>
            Gift Certificate Number
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.OriginalAmount">
            <summary>
            Original gift certificate amount
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.AmountUsed">
            <summary>
            Amount of gift certificate used
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.Balance">
            <summary>
            Gift certificate balance
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.OriginalDate">
            <summary>
            Date gift certificate was created
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.LastDate">
            <summary>
            Date gift certificate was last updated
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.Common.TheaterSharedGiftCertificateInfo.Locked">
            <summary>
            mir_lock
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl">
            <summary>
            Base Full Selection Control - Contains shared properties for the subscription selection process
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl.ConfigId">
            <summary>
            Returns the config ID of the current package in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl.CurrentPackageConfig">
            <summary>
            The current package configuration object populated from EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl.TabbedPackages">
            <summary>
            Dictionary of packages categorized by their tab placement
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl.PriceTypeConfiguration">
            <summary>
            Price Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSelectionControl.CurrentSeasonPlayDetails">
            <summary>
            Returns the play details collection populated by the current season page id
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper">
            <summary>
            Seating Helper - Contains shared logic for binding performance/package line items into a cart display, building section/price type text.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.BindSectionArea(System.Web.UI.WebControls.RepeaterItemEventArgs,System.Int32,TheaterTemplate.Shared.EpiServerConfig.SectionConfig)">
            <summary>
            Handles binding the section area, which has shared logic across all controls. Takes a repeater item.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.BindPackagePerformanceRow(Adage.Tessitura.Cart,TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection,System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            Binds a performance row in one of the performance repeaters on the Flex Seat Selection page. 
            </summary>
            <param name="performance">Current performance</param>
            <param name="ltrPerformanceName">Performance name literal</param>
            <param name="ltrPerformanceTime">Performance date/time literal</param>
            <param name="ltrVenue">Performance venue literal</param>
            <param name="ltrPriceTypes">Performance price type literal</param>
            <param name="ltrSection">Performance section literal</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.BuildPriceType(Adage.Tessitura.Cart,Adage.Tessitura.Performance,System.Web.UI.WebControls.Literal)">
            <summary>
            Based on the cart and the performance, checks to see the performance has been reserved and if so pulls out it's price type data
            </summary>
            <param name="theaterCart">Current Cart</param>
            <param name="performance">Perforance to Search for</param>
            <param name="ltrPriceTypes">Literal that is populated</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.ParsePriceTypeString(Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Based on the performance line item passed in, parse price type and quantity out
            </summary>
            <param name="currentLineItem">The current performance line item</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.CreateTicketString(System.Collections.Generic.List{Adage.Tessitura.CartObjects.Ticket})">
            <summary>
            Returns a ticket string based on the quantity and the price per seat
            </summary>
            <param name="tickets">Line item containing ticket information</param>
            <returns>String of ticket/price information</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.ParseTicketString(Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Returns a ticket string based on the quantity and the price per seat
            </summary>
            <param name="currentLineItem">Line item containing ticket information</param>
            <returns>String of ticket/price information</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.GetTypeAndQuantity(Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Retrieves the type and quantity of the tickets in the cart from the performance line item
            </summary>
            <param name="currentLineItem">Performance Line Item to search through</param>
            <returns>Dictionary of price type ids and quantities</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.BindReservedPerformance(Adage.Tessitura.Cart,TheaterTemplate.Shared.EpiServerConfig.VenueConfig,Adage.Tessitura.Performance,System.Web.UI.WebControls.Literal,System.Web.UI.WebControls.LinkButton)">
            <summary>
            Binds the section and price literals if the current performance row has been reserved.
            </summary>
            <param name="performance">Current performance (not necessarily reserved)</param>
            <param name="ltrSection">Section Literal</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.SeatingHelper.BindFixedPackagePerformance(System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            Binds a fixed seat package performance to the page
            </summary>
            <param name="e">Repeater Event Arg Containg Repeater Item</param>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.SingleDeliveryMethodConfig">
            <summary>
            Class representing a single delivery method configuration.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SingleDeliveryMethodConfig.#ctor">
            <summary>
            Default constructor - Instantiates the dictionary
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SingleDeliveryMethodConfig.GetDeliveryMethodConfig(System.Int32)">
            <summary>
            Gets the delivery method config from EpiServer and caches it based on the content Id
            </summary>
            <param name="contentId">Content Id of the configuration page</param>
            <returns>Populated delivery method configuration</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SingleDeliveryMethodConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the single delivery method configuration.
            </summary>
            <param name="deliveryMethodPage"></param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SingleDeliveryMethodConfig.GetSingleDeliveryMessage(System.Int32)">
            <summary>
            Gets the single delivery method from the dictionary based on shipping method id,
            return string.Empty if not found
            </summary>
            <param name="shippingMethodId">Shipping Method Id to search for</param>
            <returns>Single shipping method string or string.Empty</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SingleDeliveryMethodConfig.SingleDeliveryMethodMessages">
            <summary>
            Dictionary of shipping method ids and their messages
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.StoreAsXml(System.String)">
            <summary>
            Saves a GiftCertificateEmail object as XML
            </summary>
            <param name="certificateNumber">
            Certificate number from Tessitura
            </param>
            <param name="savePath">
            relative path to location where certificates are saved
            </param>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.GetGiftCertificateEmail(System.String)">
            <summary>
            Fetch a gift certificate email object from its XML representation, if one exists
            </summary>
            <param name="redemptionCode">Unique identifier from Tessitura</param>
            <param name="savePath">
            relative path to location where certificates are saved
            </param>
            <returns>
            GiftCertificateEmail object filled with data from XML file
            or an empty GiftCertificateEmail object if no XML file found
            </returns>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.FromQueryStringParams(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Parse query string params into a GiftCertificateEmail object. 
            Relevant for when object needs to be created through a service.
            </summary>
            <returns>
            GiftCertificateEmail object with values provided in query 
            string set 
            </returns>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.To">
            <summary>
            Name of party receiving certificate
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.From">
            <summary>
            Name of party sending certificate
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.Email">
            <summary>
            E-mail of party receiving certificate
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.Amount">
            <summary>
            Name of party sending certificate
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.Message">
            <summary>
            Message be placed on certificate image
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.DesignPath">
            <summary>
            String of the file path to the background 
            image of the certificate design
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.RedemptionCode">
            <summary>
            Unique identifier assigned by Tessitura to the gift certificate
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateEmail.CertificateXmlSavePath">
            <summary>
            Location where saved gift certificate information should 
            be stored.
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.MaintenanceConfig">
            <summary>
            Represents the ExchangeConfig Template page type from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.MaintenanceConfig.#ctor">
            <summary>
            Default constructor - Sets default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.MaintenanceConfig.GetMaintenanceConfig(System.Int32)">
            <summary>
            Gets the page data from EpiServer and fills the object based on the page Id passed in
            </summary>
            <param name="exchangePageId">EPiServer Page ID for the template</param>
            <returns>Populated config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.MaintenanceConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills object from lock
            </summary>
            <param name="maintPage"></param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.#ctor">
            <summary>
            Default constructor that sets all fields to empty values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.GetGiftCertificateConfig(System.Int32)">
            <summary>
            Gets and populates the gift certificate config object from EpiServer
            </summary>
            <param name="pageId">Content ID from EpiServer</param>
            <returns>Populated gift certificate config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the gift certificate config with the page data passed in by EpiServer
            </summary>
            <param name="giftCertificateData">Gift certificate data from EpiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.Header">
            <summary>
            Header text for the gift certificate page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.Body">
            <summary>
            Body content for the gift certificate page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.Footer">
            <summary>
            Footer content for the gift certificate page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.ErrorMessage">
            <summary>
            Custom error message to show if something goes wrong
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.GiftCertificateConfig.CertificateDesigns">
            <summary>
            Dictionary of certificate design images with design descriptions as keys
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedAppSettings">
            <summary>
            Contains constant string for all app settings that are in use in the Theater Template Website
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CHANGE_PASSWORD_GENERIC_ERROR">
            <summary>
            Error displayed on the change login page when there is an error updating the current user's login information - App Setting Key: CHANGE_PASSWORD_GENERIC_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CHANGE_EMAIL_EXISTS_ERROR">
            <summary>
            Error displayed on the change login page when the e-mail requested already exists - App Setting Key: CHANGE_EMAIL_EXISTS_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CHANGE_LOGIN_EXISTS_ERROR">
            <summary>
            Error displayed on the change login page when the login requested already exists - App Setting Key: CHANGE_LOGIN_EXISTS_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BEST_AVAILABLE_MISSING_SECTION_ERROR">
            <summary>
            Error displayed when the user fails to select a section for best available - App Setting Key: BEST_AVAILABLE_MISSING_SECTION_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BEST_AVAILABLE_MISSING_QUANTITY_ERROR">
            <summary>
            Error displayed when the user fails to select a quantity for best available - App Setting Key: BEST_AVAILABLE_MISSING_QUANTITY_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BEST_AVAILABLE_PRICE_TYPE_MISMATCH">
            <summary>
            Error displayed when the user selects a price type that doesn't have an associated section - App Setting Key: BEST_AVAILABLE_PRICE_TYPE_MISMATCH
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BEST_AVAILABLE_RESERVATION_FAILED">
            <summary>
            Error displayed when the reservation on the best available tab fails- App Setting Key: BEST_AVAILABLE_RESERVATION_FAILED
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_MISSING_SOLDOUT_ERROR">
            <summary>
            Error displayed on flex seating modal when the user fails to select a new choice for all failed performances. - App Setting Key: FLEX_MISSING_SOLDOUT_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SOLDOUT_RESERVE_FAILED_ERROR">
            <summary>
            Error displayed on flex seating modal when the sold out selection update fails to reserve - App Setting Key: FLEX_SOLDOUT_RESERVE_FAILED_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_EDIT_MISSING_ERROR">
            <summary>
            Error displayed on flex seating modal when the updating choices and the user fails to select an option- App Setting Key: FLEX_EDIT_MISSING_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_MISSING_SOLDOUT_DATE_ERROR">
            <summary>
            Error displayed on flex seating modal when the user fails to update all sold out performance choices - App Setting Key: FLEX_MISSING_SOLDOUT_DATE_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SELECT_SECTION_ERROR">
            <summary>
            Error displayed on flex seating page when the user fails to select a section for all performances - App Setting Key: FLEX_SELECT_SECTION_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_SOLDOUT_MISSING_ERROR">
            <summary>
            Error displayed on fixed seating modal when the user fails to select a new option for all fails reservations - App Setting Key: FIXED_SOLDOUT_MISSING_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_SOLDOUT_RESERVE_ERROR">
            <summary>
            Error displayed on fixed seating modal when the reservation on one of the packages fails - App Setting Key: FIXED_SOLDOUT_RESERVE_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_GEN_ADMIN_MISSING_ERROR">
            <summary>
            Error displayed on fixed seating page when the user fails to select a new gen admin package - App Setting Key: FIXED_GEN_ADMIN_MISSING_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_RESERVE_ERROR">
            <summary>
            Error displayed on fixed seating page when the reservation of a package fails unexpectedly - App Setting Key: FIXED_RESERVE_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_MISSING_SECTION_ERROR">
            <summary>
            Error displayed on fixed seating page when the user fails to select a section for every venue package - App Setting Key: FIXED_MISSING_SECTION_ERROR
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.REGISTER_URL">
            <summary>
            Url for the register page - App Setting Key: REGISTER_URL - Default Value: ~/account/register/index.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.LOGIN_PAGE_URL">
            <summary>
            Url for the register page - App Setting Key: LOGIN_PAGE_URL - Default Value: ~/account/login/
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.RESERVE_PAGE_URL">
            <summary>
            Url for the reserve page, with string format for performance id query string - App Setting Key: RESERVE_PAGE_URL - Default Value: /reserve/index.aspx?performanceNumber={0}
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PAYMENT_PAGE_URL">
            <summary>
            Url for the payment/checkout page - App Setting Key: PAYMENT_PAGE_URL - Default Value: ~/checkout/payment.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CONTRIBUTION_PAGE_URL">
            <summary>
            Url for the checkout path contribution page - App Setting Key: CONTRIBUTION_PAGE_URL - Default Value: ~/contribute/index.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CART_URL">
            <summary>
            Url for cart page - App Setting Key: CART_URL - Default Value: ~/cart/index.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CONFIRMATION_PAGE_URL">
            <summary>
            Url for confirmation page - App Setting Key: CONFIRMATION_PAGE_URL - Default Value: ~/checkout/confirmation.asp
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.LOGIN_CHANGE_URL">
            <summary>
            Url for the change login page - App Setting Key: LOGIN_CHANGE_URL - Default Value: ~/account/login/change.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_LIST_URL">
            <summary>
            Url for the course list page - App Setting Key: COURSE_LIST_URL - Default Value: ~/courses/
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_REGISTER_URL">
            <summary>
            Url for the course registration page with query string parameter for course id- App Setting Key: COURSE_LIST_URL - Default Value: ~/courses/courseregister.aspx?CourseId={0}
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_DETAIL_URL">
            <summary>
            Url for the course detail page with query string parameter for course id- App Setting Key: COURSE_DETAIL_URL - Default Value: "~/courses/coursedetail.aspx?CourseId={0}
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CALENDAR_URL">
            <summary>
            Url for the calendar page - App Setting Key: CALENDAR_URL - Default Value: ~/calendar/index.aspx
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SELECT_PERFORMANCE_URL" -->
        <!-- Badly formed XML comment ignored for member "F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SEATING_URL" -->
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FULL_SELECT_SUBSCRIPTION_URL">
            <summary>
            Default Url for the full subsription selection. Contains query string parameter for config id in EPiServer - 
            App Setting Key: FULL_SELECT_SUBSCRIPTION_URL - Default Value: ~/subscriptions/full/selectsubscription.aspx?ConfigID={0}
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FULL_SELECT_SEATING_URL" -->
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.RENEWAL_LANDING_URL">
            <summary>
            Url for the renewal landing page - App Setting Key: RENEWAL_LANDING_URL - Default Value: ~/subscriptions/full/renewals.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.LOCKING_ERROR_URL">
            <summary>
            Url for the user is sent to if they receive a seat locking error - App Setting Key: LOCKING_ERROR_URL - Default Value: ~/cart/index.aspx?error=lock
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.MOS_CONFLICT_URL">
            <summary>
            Url for the user is sent to if they receive a MOS Conflict error - App Setting Key: MOS_CONFLICT_URL - Default Value: ~/cart/mosconflict.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BAD_SESSION_URL">
            <summary>
            Url for the user is sent to if they receive a invalid session or not logged in session error - App Setting Key: BAD_SESSION_URL - Default Value: ~/cart/index.aspx?error=nosession
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.HOME_PAGE_URL">
            <summary>
            Home Page URL - App Setting Key: HOME_PAGE_URL - Default Value: ~/index.asp
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.GIFT_CERTIFICATE_PURCHASE_URL">
            <summary>
            Gift Certificate Page URL - App Setting Key: GIFT_CERTIFICATE_URL - Default Value: ~/gift/index.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PACKAGES_URL">
            <summary>
            Packages Landing Page URL - App Setting Key: PACKAGES_URL - Default Value: ~/Packages
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PACKAGES_HIDE_PAST">
            <summary>
            Packages Select Page should hide packages with a performance in the past - App Setting Key: PACKAGES_HIDE_PAST - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PACKAGES_HIDE_PAST_TIMESPAN">
            <summary>
            Packages Select Page should hide packages with a performance in the past based on this timespan - App Setting Key: PACKAGES_HIDE_PAST_TIMESPAN - Default Value: 0:00
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.EDIT_RENEWAL_URL">
            <summary>
            Edit renewal Url - App Setting Key: EDIT_RENEWAL_URL - Default Value: editRenewal.aspx
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.USER_INTERESTS_KEYWORD_CATEGORY_ID">
            <summary>
            Category ID to filter the keywords on in the User Interests area of the site - App Setting Key: USER_INTERESTS_KEYWORD_CATEGORY_ID - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FORGOT_PASSWORD_NO_LOGIN_EXCEPTION">
            <summary>
            Exception message that is ignored when attempting to retrieve password on the login page - App Setting Key: FORGOT_PASSWORD_NO_LOGIN_EXCEPTION
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CALENDAR_SHOW_PREVIOUS">
            <summary>
            On the calendar page, whether or not to show performances that are in the previous months display - App Setting Key: CALENDAR_SHOW_PREVIOUS - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CALENDAR_SHOW_NEXT">
            <summary>
            On the calendar page, whether or not to show performances that are in the next months display - App Setting Key: CALENDAR_SHOW_NEXT - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CALENDAR_SHOW_PAST_PERFORMANCES">
            <summary>
            On the calendar page, whether or not to show performances that are passed the current date - App Setting Key: CALENDAR_SHOW_PAST_PERFORMANCES - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PERFORMANCE_DATE_DISPLAY_FORMAT">
            <summary>
            On the calendar/reserve pages, the date format string used to display performance date in the performance header - 
            App Setting Key: PERFORMANCE_DATE_DISPLAY_FORMAT - Default Value: dddd, MMMM d
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PERFORMANCE_DATE_FORMAT">
            <summary>
            Condense version of the performance date format displayed on the reserve page. Used by JavaScript- App Setting Key: PERFORMANCE_DATE_FORMAT - Default Value: yyyy/M/d
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PERFORMANCE_TIME_FORMAT">
            <summary>
            On the calendar/reserve pages, the date format string used to display performance time in the performance header - 
            App Setting Key: PERFORMANCE_DATE_DISPLAY_FORMAT - Default Value: h:mm tt
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_START_DATE_FORMAT">
            <summary>
            On the course pages, the date format string used to display course day - App Setting Key: COURSE_START_DATE_FORMAT - Default Value: dddd, MMM-dd-yyyy
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.ConfirmationEmailPageID">
            <summary>
            Page ID to use to generate the e-receipt by default from the checkout page - App Setting Key: ConfirmationEmailPageID - Default Value: string.Empty
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.GiftCertificateEmailPageID">
            <summary>
            Page ID to use to generate the gift certificate email - App Setting Key: GiftCertificateEmailPageID - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SEND_GIFT_CERT_EMAIL">
            <summary>
            Whether or not to send the gift certificate e-amails by default App Setting Key: SEND_GIFT_CERT_EMAIL - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CART_PAGE">
            <summary>
            Cart Page ID - Used to populate cart control through checkout path -  App Setting Key: CART_PAGE - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SingleDeliveryConfigId">
            <summary>
            Page ID to use configure single delivery method display (see SingleDeliveryMethodConfig class) - App Setting Key: SingleDeliveryConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PriceTypeConfigId">
            <summary>
            Page ID to use configure price type rename configuration - App Setting Key: PriceTypeConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FeeTypeConfigId">
            <summary>
            Page ID to use configure fee type rename configuration - App Setting Key: FeeTypeConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SectionConfigId">
            <summary>
            Page ID to use configure fee type rename sections - App Setting Key: SectionConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FlexPackageConfigId">
            <summary>
            Page ID to use configure flex packages - App Setting Key: FlexPackageConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.ProductionFilterConfigId">
            <summary>
            Page ID to use configure production filters for flex packages - App Setting Key: ProductionFilterConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PerformanceFilterConfigId">
            <summary>
            Page ID to use configure performance filters for flex packages - App Setting Key: PerformanceFilterConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COUNTRY_CODE_USA">
            <summary>
            ID of the country code for USA - App Setting Key: COUNTRY_CODE_USA - Default Value: string.Empty
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SHIPPING_ADDRESS_TYPE_ID">
            <summary>
            Id used to determine which address is the shipping address - App Setting Key: SHIPPING_ADDRESS_TYPE_ID - Default Value: "2" (returned as a string)
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SHIPPING_METHOD_POSTAL">
            <summary>
            Id used to determine which method is postal - App Setting Key: SHIPPING_METHOD_POSTAL - Default Value: 2
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SHIPPING_METHOD_PAH">
            <summary>
            Id used to determine which method is PAH - App Setting Key: SHIPPING_METHOD_PAH - Default Value: 2
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CONTRIB_FUND_NO">
            <summary>
            Contribution fund to use on the checkout path contribution page - App Setting Key: CONTRIB_FUND_NO - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CONTRIB_ACCOUNT_METH">
            <summary>
            Contribution account method to use on the checkout path contribution page - App Setting Key: CONTRIB_ACCOUNT_METH - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_DETAIL_FOLDER_ID">
            <summary>
            Page ID of the EPiServer page that contains course templates - App Setting Key: COURSE_DETAIL_FOLDER_ID - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CourseRegistrationConfigId">
            <summary>
            Course Registartion Configuration Page Id - App Setting Key: CourseRegistrationConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_KEYWORD_SEPERATOR">
            <summary>
            Seperator used for Course Keywords on the course list page - App Setting Key: COURSE_KEYWORD_SEPERATOR - Default Value: ;
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSE_USE_TEMPLATE_URL">
            <summary>
            Whether or not to allow the template URL for the course details to be used - App Setting Key: COURSE_USE_TEMPLATE_URL - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.COURSES_HIDE_LEARN_MORE_LINKS">
            <summary>
            Whether or not to hide the learn more links on the course list page - App Setting Key: COURSES_HIDE_LEARN_MORE_LINKS - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BEST_AVAILABLE_PRICETYPE_NO_SECTION">
            <summary>
            Text to display when the best available has a price type, but no matching section for that price type - App Setting Key: BEST_AVAILABLE_PRICETYPE_NO_SECTION - Default Value: N/A
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BEST_AVAILABLE_UNSEATED">
            <summary>
            Whether or not to reserve best available unseated by default - App Setting Key: BEST_AVAILABLE_UNSEATED - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PDP_PAGE_TYPE">
            <summary>
            The comma seperated list of page types that correspond to CFS PDP objects - App Setting Key: PDP_PAGE_TYPE - Default Value: string.Empty
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.VENUE_CONFIGURATIONS">
            <summary>
            The EPiServer page ID that contains all the current venue configurations - App Setting Key: VENUE_CONFIGURATIONS - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.MINI_CAL_USE_CALENDAR_PERFORMANCES_ONLY">
            <summary>
            Whether or not to use only performances that exist on the calendar in the mini-calendar on the reserve page. If false, then all performances associated with
            production will show, even if they don't exist on calendar - App Setting Key: MINI_CAL_USE_CALENDAR_PERFORMANCES_ONLY - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CalendarConfigId">
            <summary>
            Page ID of the calendar page in EPiServer - App Setting Key: CalendarConfigId - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SEATING_PER_PACKAGE">
            <summary>
            Whether or not flex package seating exists on a the package level or performance level. If package level, then flex package mus be setup. - App Setting Key: FLEX_SEATING_PER_PACKAGE - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_RESERVE_AUTOMATICALLY">
            <summary>
            Whether or not to skip the flex seating page and automatically reserve all performances. - App Setting Key: FLEX_RESERVE_AUTOMATICALLY - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_RESERVE_UNSEATED">
            <summary>
            Whether or not to reserve flex performances unseated - App Setting Key: FLEX_RESERVE_UNSEATED - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SECTION_ALL_SECTIONS_AVAILABLE">
            <summary>
            Flag to pass to flex package pricing section aggregator for all sections needing to be available - App Setting Key: FLEX_SECTION_ALL_SECTIONS_AVAILABLE - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_SECTION_ACCUMULATE_PRICES">
            <summary>
            Whether or not to accumulate prices for the flex package pricing - App Setting Key: FLEX_SECTION_ACCUMULATE_PRICES - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FlexMinimumDefault">
            <summary>
            Default minimum to use for flex packages  - App Setting Key: FlexMinimumDefault - Default Value: 3
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FlexMaximumDefault">
            <summary>
            The number of dummy rows to create on the  - App Setting Key: FlexMaximumDefault - Default Value: 20
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.RenewalMOS">
            <summary>
            MOS to use for the renewal page - App Setting Key: RenewalMOS - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FlexMOS">
            <summary>
            MOS to use for the flex page- App Setting Key: FlexMOS - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FLEX_INVALID_ERROR">
            <summary>
            Error display when a flex package is invalid in the cart and must be removed - 
            App Setting Key: FLEX_INVALID_ERROR - Default Value: "The subscription in your cart has been removed because it is invalid. Please begin again."
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_RESERVE_UNSEATED">
            <summary>
            Whether or not to reserve fix seat packages unseated - App Setting Key: FIXED_RESERVE_UNSEATED - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FIXED_RESERVE_LEAVE_SINGLE">
            <summary>
            Whether or not to reserve fix seat packages with Leave single seats - App Setting Key: FIXED_RESERVE_LEAVE_SINGLE - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.RENEWAL_ALTERNATE_RESERVE_UNSEATED">
            <summary>
            Whether or not to reserve renewal alternates unseated - App Setting Key: RENEWAL_ALTERNATE_RESERVE_UNSEATED - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.RENEWAL_SHOW_PRIMARY">
            <summary>
            Whether to show the primary item on a change request in the cart display - App Setting Key: RENEWAL_SHOW_PRIMARY - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.ALLOW_MASTER_PACKAGES">
            <summary>
            Whether or not to allow master packages - App Setting Key: ALLOW_MASTER_PACKAGES - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.EMAIL_SHOW_VENUE">
            <summary>
            Whether or not to show the venue in e-mails - App Setting Key: EMAIL_SHOW_VENUE - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.LOG_API_CALLS">
            <summary>
            Whether or not to log API calls - App Setting Key: LOG_API_CALLS - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.LOG_API_CALLS_TO_FILE">
            <summary>
            Whether or not to log API calls to a file - App Setting Key: LOG_API_CALLS_TO_FILE - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.LOG_API_CALLS_FILE_NAME">
            <summary>
            If LOG_API_CALLS_TO_FILE and LOG_API_CALLS are true the file name where the log will be written - App Setting Key: LOG_API_CALLS_FILE_NAME - Default Value: C:\API_LOGS\log.txt
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.MAIL_SERVER">
            <summary>
            Default SMTP server - App Setting Key: MAIL_SERVER - Default Value: localhost
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.RENEWAL_PAGE_ID">
            <summary>
            Renewal page ID - App Setting Key: RENEWAL_PAGE_ID - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.UPGRADE_CHOICE_DEFAULT_GROUP_NAME">
            <summary>
            Default value if title isn't set on upgrade choice - App Setting Key: UPGRADE_CHOICE_DEFAULT_GROUP_NAME - Default Value: UpgradeChange
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CART_ADDON_CONFIGURATIONS">
            <summary>
            Page ID of the cart add on container - App Setting Key: CART_ADDON_CONFIGURATIONS - Default Value: 0
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.SINGLE_TICKET_RESET_MODES_OF_SALE">
            <summary>
            Comma seperate list of MOSes that will be reverted when hitting the single ticket path - App Setting Key: SINGLE_TICKET_RESET_MODES_OF_SALE - Default Value: string.Empty
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.PREPEND_IMAGE_URL">
            <summary>
            Whether or not to prepend BASE_IMAGE_URL to images populated from EPiServer configs - App Setting Key: PREPEND_IMAGE_URL - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.BASE_IMAGE_URL">
            <summary>
            URL used to resolve images while working locally - App Setting Key: BASE_IMAGE_URL - Default Value: string.Empty
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.FILTER_PROPERTY_NAME">
            <summary>
            Property Name of the left panel filters - App Setting Key: FILTER_PROPERTY_NAME - Default Value: LeftPanelOptions
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.WEB_CACHE_MINUTES">
            <summary>
            Number of minutes to cache objects in the web cache manager - App Setting Key: WEB_CACHE_MINUTES - Default Value: 10
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.GIFT_CERTIFICATE_GRAPHIC_CONFIG_FILE">
            <summary>
            Location of XML config file defining the look and feel of the gift certificate graphic - 
            App Setting Key: GIFT_CERTIFICATE_GRAPHIC_CONFIG_FILE - Default Value: ~/gift/certificateImageConfig.xml
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.GIFT_CERTIFICATE_SAVE_PATH">
            <summary>
            Location where XML copies of gift certificates should be stored prior to checkout - 
            App Settings Key: GIFT_CERTIFICATE_SAVE_PATH - Default Value: ~/gift/CertificateData
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.GIFT_CERTIFICATE_EMAIL_IMAGE_CONTENT_ID">
            <summary>
            Content id specified for the certificate image in the email template
            App Settings Key: GIFT_CERTIFICATE_EMAIL_IMAGE_CONTENT_ID - Default value: giftCertImage
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.DONATION_ROUND_UP_VALUE">
            <summary>
            Javascript key used to evaluate expressions for donation round up - App Setting Key: DONATION_ROUND_UP_VALUE - Default Value: Results
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.CART_DONATION_REQUIRE_LOGIN">
            <summary>
            Whether or not to require login on the cart donation page - App Setting Key: CART_DONATION_REQUIRE_LOGIN - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.HIDE_SINGLE_TABS">
            <summary>
            Whether or not to hide single tabs - App Setting Key: HIDE_SINGLE_TABS - Default Value: true
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.IS_TEST">
            <summary>
            Whether or not to the server is the TEST server - App Setting Key: IS_TEST - Default Value: false
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.TEST_EMAIL_DOMAINS">
            <summary>
            If this is the TEST server the domains it can send emails to comma separated - App Setting Key: TEST_EMAIL_DOMAINS - Default Value: string.Empty
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.Common.TheaterSharedAppSettings.TEST_EMAIL_TO_MAILINATOR">
            <summary>
            If this is the TEST server the domains is not listed then it should send to mailinator via the customer ID - App Setting Key: TEST_EMAIL_TO_MAILINATOR - Default Value: true
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig">
            <summary>
            Calendar Config - Contains fields populated from EpiServer that drives the calendar page
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig.#ctor">
            <summary>
            Protected constructor - Sets defaults on fields
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig.GetPromoBoxConfig(System.Int32)">
            <summary>
            Based on the configuration ID passed in, populates/returns a  populated Calendar Config object 
            </summary>
            <param name="configurationId">Configuration Id</param>
            <returns>Populated PromoBoxConfig object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object based on the EpiServer page object passed in
            </summary>
            <param name="page">EpiServer page data to uses to fill the object</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig.MainBody">
            <summary>
            Main text to show
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig.InvalidPromoError">
            <summary>
            Error to show when promo does not exist
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PromoBoxConfig.PromoFailedError">
            <summary>
            Error to show when Promo fails to apply
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.EPiHelper">
            <summary>
            Class to help work with episerver data
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.EPiHelper.GetPagesOfType(EPiServer.Core.PageReference,System.Int32)">
            <summary>
            Gets PageDataCollection of page of a certain PageType
            </summary>
            <param name="rootPage">Root node so search under</param>
            <param name="pageTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.EPiHelper.GetControlList``1(System.Web.UI.ControlCollection,System.Collections.Generic.List{``0})">
            <summary>
            Static method to get list of controls of a certain type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="controlCollection"></param>
            <param name="resultCollection"></param>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.EPiHelper.GetEPiPageId(System.Web.UI.Page)">
            <summary>
            Returns the page ID based on the current page link of the EpiServer page. If page passed is not of type
            EPiServer.PageBase then returns 0
            </summary>
            <param name="page">Page that will will be cast as EPiServer.PageBase</param>
            <returns>Current Page Link ID if of type EPiServer.PageBase or 0 otherwise</returns>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseMosConflictControl">
            <summary>
            Base User Control for the MOS Conflict Controls
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseMosConflictControl.MosConflictPageReference">
            <summary>
            Page Reference to Mos Conflict Page Data in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseMosConflictControl.CurrentCart">
            <summary>
            Returns the session's current cart
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.IDValueConfig">
            <summary>
            Class represeneting a Key/Value Configuration Page Type in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfig.GetIDValueConfig(System.Int32)">
            <summary>
            Based on the EpiServer Page Id passed in, populate the IDValue object and return
            </summary>
            <param name="configurationId">Page Id of Key/Value Config Page in EpiServer</param>
            <returns>Populated IDValueConfig</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfig.#ctor">
            <summary>
            Constructor - Instantiates Dictionary
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the price type configuration object from page data is EpiServer
            </summary>
            <param name="priceTypePage">Page Data from EpiServer</param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfig.GetValueByID(System.Int32,System.String)">
            <summary>
            If the id exists in the collection, then return that value, otherwise return the defaultValue
            </summary>
            <param name="id">ID to search for</param>
            <returns>Value from EpiServer if found, defaultValue description otherwise</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.IDValueConfig.IDValueDictionary">
            <summary>
            A dictionary of Ids and their values
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig">
            <summary>
            Represents the Ticket History Template page type from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.#ctor">
            <summary>
            Default constructor - Sets default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.GetTicketHistoryConfig(System.Int32)">
            <summary>
            Gets the page data from EpiServer and fills the object based on the page Id passed in
            </summary>
            <param name="historyPageId">EPiServer Page ID for the template</param>
            <returns>Populated config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.GetTicketHistoryConfig``1">
            <summary>
            Gets the page data from EpiServer and fills the object based on the page Id passed in
            </summary>
            <param name="exchangePageId">EPiServer Page ID for the template</param>
            <returns>Populated config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object with the data from EPiSErver
            </summary>
            <param name="historyPage">Page Data from EPiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.HistoryHeader">
            <summary>
            Header displayed on the ticket history page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.HistoryBody">
            <summary>
            Body displayed on the ticket history page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.NoTicketHistory">
            <summary>
            Message displayed when the user has no performance ticket history
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.PerformanceAreaHeader">
            <summary>
            Header displayed above the performance ticket history area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.AddOnHeader">
            <summary>
            Header displayed above the add on header area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.HistoryFooter">
            <summary>
            Footer displayed on the ticket history page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.AllowedSeasonIds">
            <summary>
            Season Ids that are allowed to be displayed on the ticket history page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.HiddenPerformanceIds">
            <summary>
            Performance Ids that are hidden from the ticket history area
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.TicketHistoryConfig.HiddenProductionSeasonIds">
            <summary>
            Production Season Ids that are hidden from the ticket history page
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.SectionConfig">
            <summary>
            Class representing the Section Configuration Page Type in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SectionConfig.GetSectionConfig(System.Int32)">
            <summary>
            Retrieves section config based on configuraiton ID passed in, returns populated section config object
            </summary>
            <param name="configurationId">ID of Page in EpiServer</param>
            <returns>Populated Section Config</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SectionConfig.#ctor">
            <summary>
            Public constructor - initializes dictionary
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SectionConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the section configuration object with the page data
            </summary>
            <param name="sectionPage">EpiServer page data based on the configuration id passed in</param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SectionConfig.GetSectionDescription(System.Int32)">
            <summary>
            Returns a section description from the Section Description dictionary based on the passed in section id
            </summary>
            <param name="sectionId">Section Id</param>
            <returns>Description of section id passed in or empty string if not found</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SectionConfig.SectionDescriptions">
            <summary>
            Dictionary of section Ids and their descriptions
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CartAddOnCollection">
            <summary>
            A class representing a collection of cart add ons based on a folder id in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartAddOnCollection.#ctor">
            <summary>
            Default Constructor - Instantiates the list object
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartAddOnCollection.GetAddOnCollection(System.Int32)">
            <summary>
            Based on the add on folder id, populate the add on collection and return
            </summary>
            <param name="addOnFolderId">Folder Id containing cart add ons</param>
            <returns>Populated Cart Add on Collection</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartAddOnCollection.IsCartAddOn(System.Int32)">
            <summary>
            Returns whether or not the passed in performance id exists as a cart add on
            </summary>
            <param name="performanceId">Performance ID to search on</param>
            <returns>True if performance id is acart add on, false otherwise</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOnCollection.CartAddOns">
            <summary>
            Returns a list of the Cart Add Ons retrieved from EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CartAddOn">
            <summary>
            A class representing an individual Cart Add On page type in EpiServer and it's properties
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.CanBePurchased(Adage.Tessitura.Cart)">
            <summary>
            Based on the cart passed in
            </summary>
            <param name="currentCart"></param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.IsTooCloseToDate(Adage.Tessitura.CartObjects.PerformanceLineItem)">
            <summary>
            Checks the performance data against the DaysBeforePerformance property to see if it is too close to the 
            date to purchase tickets
            </summary>
            <param name="performance">Performance to check agains</param>
            <returns>True if too close to performance, false otherwise</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the properties of the Cart Add On based on the EpiServer page data
            </summary>
            <param name="addOnPage">Page Data from EpiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.PerformanceId">
            <summary>
            Performance Id of the Cart Add On in Tessitura
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.PriceTypeId">
            <summary>
            Price Type Id to be used to reserve the cart add on
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.SectionId">
            <summary>
            Section Id to be used to reserve the cart add on
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.DisplayName">
            <summary>
            Display name of the item to be shown to user
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.AddOnTitle">
            <summary>
            The HTML representation of the Add On Title from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.ReservedMessage">
            <summary>
            Returns the message that will be displayed after the cart add on has been succesfully reserved
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.AvailableForSale">
            <summary>
            Based on the visitor group in EpiServer, returns whether or no parking is available
            for sale
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.QuantityDescription">
            <summary>
            Text to be displayed next to the quantity drop down
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.MaxAllowed">
            <summary>
            The maximum number of the cart add ons that are allowed to be reserved. Used to bind the drop down selection.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.DaysBeforePerformance">
            <summary>
            The number of days before any performance in the cart that the 
            add on is available for reservation
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartAddOn.TotalText">
            <summary>
            Returns the text to be displayed next to the total
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.#ctor">
            <summary>
            public constructor that sets the path of the
            Xml config file to read
            </summary>
            <param name="configFilePath">
            string path to the config file
            </param>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.FontFamily">
            <summary>
            string font family as used in CSS
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.FontColor">
            <summary>
            String font color name
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.FontSize">
            <summary>
            Integer font point size
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.MessageDimensions">
            <summary>
            Point of the form (width, height) that represents the 
            boundaries of the gift certificate message
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.TextFields">
            <summary>
            Dictionary whose keys correspond to names of 
            GiftCertificateEmail class properties and values 
            are the Points were values of these fields should 
            be dropped
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.GiftCertificateObjects.GiftCertificateGraphicOptions.ConfigFilePath">
            <summary>
            Location of the xml config file that tells the service what to 
            draw and where to draw it
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseCalendarControl">
            <summary>
            Calendar Control Base Object - Contains shared calendar page logic
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.DATE_FORMAT">
            <summary>
            Date format that the page uses to store the first day of the current month
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.GetInitialMonth">
            <summary>
            Gets the selected month based on the whether the query string "month" has been set, the current month, or the calendar config start
            date is later.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.CalendarConfiguration">
            <summary>
            Calendar Configuration Object pulled from EpiServer. Contains properties to drive the calendar page.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.StartDateToUse">
            <summary>
            Start date to limit calendar to
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.EndDateToUse">
            <summary>
            End date to limit calendar to
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.CurrentPerformances">
            <summary>
            Returns a list of current performances based on the criteria from the CalendarConfiguration object
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.CurrentMonth">
            <summary>
            The current month represented in a date time format
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.CurrentCalendarMonth">
            <summary>
            The current calendar month associated with the calendar month object
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.PromoPerformances">
            <summary>
            A list of available promo performances based on the current session's promo code
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCalendarControl.CurrentSeasonPlayDetails">
            <summary>
            Returns the play details collection populated by the current season page id
            </summary>
        </member>
        <member name="T:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper">
            <summary>
            Helper to make REST calls against the WebLogins REST endpoint.
            </summary>
        </member>
        <member name="M:MetOpera_Adage.Common.MetRESTTessitura.GetRestResponse``1(System.String)">
            <summary>
            Generic method that requests data of a particular type for a particular acccount 
            from Tessitura's REST API
            </summary>
            <typeparam name="T">Type of data to pull from Tessitura</typeparam>
            <param name="request">Relative URL of REST service to hit</param>
            <returns></returns>
        </member>
        <member name="M:MetOpera_Adage.Common.MetRESTTessitura.GetReferenceData``1(System.String)">
            <summary>
            Generic method that requests data from the Tessitura REST API's 
            reference service
            </summary>
            <typeparam name="T">Type of data to pull from Tessitura</typeparam>
            <param name="request">Relative URL of REST service to hit</param>
            <returns></returns>
        </member>
        <member name="M:MetOpera_Adage.Common.MetRESTTessitura.PutRestUpdate``1(System.String,``0)">
            <summary>
            Generic method that updates data stored in Tessitura based on 
            one of the REST API's hard-typed object
            </summary>
            <typeparam name="T">Type of object being updated</typeparam>
            <param name="request">Relative URL of REST service to hit</param>
            <param name="updatedObject">The object containing the updated information</param>
            <returns></returns>
        </member>
        <member name="P:MetOpera_Adage.Common.MetRESTTessitura.ClientCredentials">
            <summary>
            User credentials object passed in to every REST request
            </summary>
        </member>
        <member name="P:MetOpera_Adage.Common.MetRESTTessitura.ErrorMessages">
            <summary>
            List of error messages encountered from 
            interactions with Tessitura
            </summary>
        </member>
        <member name="M:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.#ctor(System.Int32)">
            <summary>
            Initialization that sets constituent id.
            </summary>
            <param name="constituentId"></param>
        </member>
        <member name="M:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.BreakEmailAddressRelationship">
            <summary>
            Breaks email address tied to the weblogin. The email address is still on the tessitura user, but is not tied to the webobject.
            </summary>
            <returns>Successfully removed email</returns>
        </member>
        <member name="M:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.UpdateEmailAddress(System.String)">
            <summary>
            Updates email address tied to WebLogin with the string email address passed in.
            </summary>
            <param name="emailAddress"></param>
        </member>
        <member name="M:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.RemoveCreateWebLogin(Tessitura.ConstituentService.Client.WebLogin)">
            <summary>
            Deletes the WebLogin and creates an identical WebLogin with no Email Address bound
            </summary>
            <param name="webLogin">The WebLogin to remove</param>
            <returns>Succeeded true/false</returns>
        </member>
        <member name="P:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.Snapshot">
            <summary>
            Constituent snapshot from Tessitura that is used to 
            populate the name-related info of an affiliate
            </summary>
        </member>
        <member name="P:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.ConstituentId">
            <summary>
            Unique identifier for the user account in Tessitura
            </summary>
        </member>
        <member name="P:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.FirstName">
            <summary>
            Patron's first name
            </summary>
        </member>
        <member name="P:MetOpera_Adage.AccountObjects.WebLoginsRESTHelper.LastName">
            <summary>
            Patron's last name
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomMaster.CurrentUser">
            <summary>
            Returns the currently logged in user
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.FlexPackageHelper.GetPerformances(Adage.Tessitura.FlexPackage,System.Int32)">
            <summary>
            Get's all the performances whose performances dates are after today from the the passed in Flex Package based on the on production ID passed in
            </summary>
            <param name="currentFlexPackage">Flex Package containing performances</param>
            <param name="productionID">Production ID to filter on</param>
            <returns>List of Performances with the same production ID as passed in</returns>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.CalendarWeek">
            <summary>
            Represents a week contained inside of a calendar month. Set's the whole week to a default value and later filled in by the
            month object. If a day has Filled == false, then it hasn't been filled for this month
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarWeek.#ctor">
            <summary>
            Constructor - Populates a default week with empty days
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarWeek.PopulateDefaultWeek">
            <summary>
            Sets all days in a week to a default value
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarWeek.GetNewDay">
            <summary>
            Returns a new instance of calendar day
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth">
            <summary>
            Represents a calendar based on a given month. 
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.#ctor">
            <summary>
            Constructor - Calls Build Properties
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.BuildProperties">
            <summary>
            Builds the properties of the month
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.GetCalendarMonth(Adage.Tessitura.Performances,System.DateTime,System.Boolean)">
            <summary>
            Based on the collection of performances and the month passed in. Populated a calendar month and return. The boolean
            flag indicates whether or not to fill previous/next months. Only do this if getting one month.
            </summary>
            <param name="calendarPerformances">Performances to populate calendar with</param>
            <param name="date">Date representation of the month to populate calendar with</param>
            <param name="fillAdjacentMonths">Whether or not to fill adjacent months</param>
            <returns>Populated Calendar Month</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.Fill(Adage.Tessitura.Performances,System.DateTime,System.Boolean)">
            <summary>
            Fills the Calendar Month based on the date representation passed in
            </summary>
            <param name="calendarPerformances">Current Performances available to calendar</param>
            <param name="date">DateTime representation of the month</param>
            <param name="fillAdjacentMonths">Whether or not to fill adjacent months</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.BuildMonthDescription(System.DateTime)">
            <summary>
            Based on the date filled in, builds the month description property for the calendar
            </summary>
            <param name="date">Date of month</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.FillWeeks(Adage.Tessitura.Performances,System.DateTime)">
            <summary>
            Fills the individual weeks for the month
            </summary>
            <param name="calendarPerformances">Calendar Performances</param>
            <param name="date">Date Of Month</param>
        </member>
        <member name="M:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.FillPreviousNextWeeks(Adage.Tessitura.Performances,System.DateTime)">
            <summary>
            Fills the first/last week with the days from
            </summary>
            <param name="calendarPerformances">Performances available to the calendar</param>
            <param name="date">Current Month</param>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.Weeks">
            <summary>
            List of weeks contained in the current month
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.MonthDescription">
            <summary>
            Returns the month description of the calendar. Returns in the format MONTH YEAR
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.PerformanceObjects.CalendarMonth.Filled">
            <summary>
            Whether or not the calendar month has been filled
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig">
            <summary>
            Class representing the Payment/Confirmation content page in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.#ctor">
            <summary>
            Protected constructor - Set's default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.Get(System.Int32)">
            <summary>
            Retrieves payment confirm config from Cache or EpiServer.
            </summary>
            <param name="contentId">Content Id to populate</param>
            <returns>Populated Payment Confirm Content Config</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object from EpiServer
            </summary>
            <param name="paymentConfirmData">EpiServer page data</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.Header">
            <summary>
            Header value
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.OtherRenewalMessage">
            <summary>
            Billing address header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalsOnsale">
            <summary>
            Delivery Method header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalSeasonID">
            <summary>
            Delivery method header
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalsNotOnSale">
            <summary>
            Displayed when no renewals are OnSale
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalNotAvailable">
            <summary>
            Displayed when the current user doesn't have a renewal
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalOrderLocked">
            <summary>
            Displayed if the current renewal order is locked
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalAlreadyCompleted">
            <summary>
            Displayed if the current renewal order is already completed
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.SubscriptionRenewalConfig.RenewalRemoveMessage">
            <summary>
            Displayed when the user attempts to remove the current renewal
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PlayDetailsCollection">
            <summary>
            A class that represents a collection of play details from a given season. Based on a Page ID in EpiServer
            that contains all the play detail pages.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetailsCollection.#ctor">
            <summary>
            Default Constructor - Instantiates the Play Details object
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetailsCollection.GetPlayDetail(System.Int32)">
            <summary>
            Based on the tessitura ID passed in, returns the play detail based id or null of not found
            </summary>
            <param name="tessituraId">Tessitura Id of play detail to search for</param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetailsCollection.GetPlayDetails">
            <summary>
            Based on the season page Id passed in, fills the collection object with all
            the play details page
            </summary>
            <param name="seasonPageId">EpiServer Page Id of the play details collection page</param>
            <returns>A PlayDetailsCollection object filled with the Play Details from the season id passed in.</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetailsCollection.Fill">
            <summary>
            Fills the collection from lock using the 
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetailsCollection.PlayDetails">
            <summary>
            A list of play details for the collection. Filled based upon the Page ID passed in.
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PlayDetail">
            <summary>
            A class that represents an individual Play Details page in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.#ctor">
            <summary>
            Default Constructor - Sets default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.GetSYOSRootPage(Adage.Tessitura.Performance)">
            <summary>
            Finds the current SYOS root page based on the current performance venue
            </summary>
            <param name="currentPerformance"></param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the play details page object with the play details from EpiServer
            </summary>
            <param name="playDetailsPage">Play Details page from EpiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.Heading">
            <summary>
            EpiServer Page Property - Heading
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.TessituraId">
            <summary>
            EpiServer Page Property - Tessitura Id
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.PlayWright">
            <summary>
            EpiServer Page Property - Play Wright
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.Director">
            <summary>
            EpiServer Page Property - Director
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.RunTime">
            <summary>
            EpiServer Page Property - Run Time
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.DateRange">
            <summary>
            EpiServer Page Property - Date Range
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.MainBody">
            <summary>
            EpiServer Page Property - Main Body
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.ProductionSynopsis">
            <summary>
            Production Synopsis of the current play
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.CalendarSynopsis">
            <summary>
            Synopsis displayed on the calendar page popup for the production
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.ReserveMessageOverride">
            <summary>
            Production-specific reserve message to override the general messaging with
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.ThumbnailUrl">
            <summary>
            EpiServer Page Property - Thumbnail150x75 - To Be Overridden in Base If Need Be
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.LargeImageUrl">
            <summary>
            EpiServer Page Property - LargeImageUrl - To Be Overridden in Base If Need Be
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.SYOSRootPage">
            <summary>
            Page ID for the associated SYOS root page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.PlayDetailLink">
            <summary>
            Link for the play details page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.StartEndDate">
            <summary>
            Start end date for the production
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PlayDetail.HideFromCalendar">
            <summary>
            Whether or not the hide the PDP from the calendar
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.FriendEvent">
            <summary>
            Facebook Event
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.#ctor">
            <summary>
            Internal constructor that initializes all properties
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.GetContributeConfig(System.Int32)">
            <summary>
            Returns a contribute configuration object populated 
            from EpiServer
            </summary>
            <param name="pageId">EpiServer page id</param>
            <returns>Populated ContributeConfig object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills within a lock block
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.Title">
            <summary>
            Title of the page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.HeaderImage">
            <summary>
            Header image of the page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.HeaderText">
            <summary>
            paragraph-format text at the head of the page content
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.FooterText">
            <summary>
            paragraph-format text at the footer of the page content
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.ErrorMessage">
            <summary>
            Custom error message to display if something goes wrong during the donation process
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.MissingFundError">
            <summary>
            Error if the user fails to select a fund
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.InvalidAmountError">
            <summary>
            Error displayed when the user enters an invalid donation.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.DefaultMembership">
            <summary>
            Page reference of default membership info to show
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.FundList">
            <summary>
            List of funds and corresponding information
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.ContributeConfig.MembershipLevelsList">
            <summary>
            List of membership levels and corresponding information
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl">
            <summary>
            Base Flex Seat Selection Control - Contains Flex Package objects, shared session items, and shared configuration items
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.PopulatePerformanceCollections">
            <summary>
            Populates the performance collection and its associated price type dictionary. It is expected that the query string passed in
            will be in the format PERFORMANCEID_PRICEYPE_QUANITY,PERFORMANCEID_PRICEYPE_QUANITY (ex: PerformanceIDs=15118_993_1,15212_993_1)
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.GetPriceTypeForPerfCollection(System.Int32)">
            <summary>
            Called from the PopulatePerformanceCollections() method. Gets the price type from the performance based on the price type ID
            </summary>
            <param name="currentPerformance">Performance to get price type from</param>
            <param name="priceTypeID">Price Type ID to search for</param>
            <returns>Price Type or null if not found</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.ResetPerformanceCollections">
            <summary>
            Resets performance collection to original value
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.GetPerformanceList(System.Collections.Generic.List{Adage.Tessitura.Performance},System.Collections.Generic.List{Adage.Tessitura.FlexReserveRequest})">
            <summary>
            Based on the performances and requests passed in, returns a list of performances whose performanceIds are in the requests collection.
            </summary>
            <param name="availablePerformances"></param>
            <param name="requests"></param>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.BuildRequestPriceType(System.Int32,Adage.Tessitura.FlexReserveRequest)">
            <summary>
            Based on the Performance Price Types collection and the performance ID passed in, build the selected 
            price types for each individual reseve request
            </summary>
            <param name="performanceId">Performance Id of the request</param>
            <param name="reserveRequest">Reserve Request to populate</param>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.BuildNewSectionRequest(System.Web.UI.WebControls.Repeater,System.Collections.Generic.List{Adage.Tessitura.FlexReserveRequest},System.Int32)">
            <summary>
            Based on the repeater containing sections and performance Id passed in, build a new request to add to the collection passed in.
            </summary>
            <param name="rptSections">Repeater containing selected section</param>
            <param name="newReserveRequests">Collection of requests to populate</param>
            <param name="performanceId">Performance Id of request</param>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.BuildNewPerformanceRequest(System.Collections.Generic.List{Adage.Tessitura.FlexReserveRequest},System.Collections.Generic.List{Adage.Tessitura.Performance},System.String,System.Int32,System.Int32)">
            <summary>
            Based on the list box containing the newly selected performance, populate the collection of requests with a nwe collection.
            </summary>
            <param name="lbxAlternatePerformances">List Box containing new section</param>
            <param name="newReserveRequests">Collection To Populate</param>
            <param name="performancesToReserve">Collection of Performances to add newly selected performance</param>
            <param name="oldPerformarmanceId">Performance Id of failed performance</param>
            <param name="originalSectionId">Section Id of original request</param>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.IsUnseated">
            <summary>
            Returns whether or not the request is unseated. Base functionality keys off of FLEX_RESERVE_UNSEATED
            </summary>
            <returns>Value of FLEX_RESERVE_UNSEATED</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.GetParentLineItemId">
            <summary>
            If a flex package line item exists already, then return parent Id, otherwise returns 0.
            </summary>
            <returns>A parent Id if a flex package line item exists in the cart, otherwise returns 0.</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.GetSections(System.Collections.Generic.List{Adage.Tessitura.Performance})">
            <summary>
            Based on the performance list passed in, the CurrentPackageConfig, and the CurrentFlexPackage this method determines the appropriate price type to use
            </summary>
            <param name="performanceList">List of performance with sections</param>
            <returns>Filtered List of Sections</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.CurrentFlexPackage">
            <summary>
            The currently bound flex package based on the PackageID parameter
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.ConfigId">
            <summary>
            Returns the config ID of the current package in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.CurrentPackageConfig">
            <summary>
            The current package configuration object populated from EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.PriceTypeConfiguration">
            <summary>
            Price Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.SectionConfiguration">
            <summary>
            Section Configuration object populated from EpiServer. Contains detail section descriptions
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.CurrentSeasonPlayDetails">
            <summary>
            Returns the play details collection populated by the current season page id
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.Performances">
            <summary>
            List of performances pulled from the query string
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.PerformancePriceTypes">
            <summary>
            Collection of each performance ID selected with each price type and quantity
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.PerformanceIds">
            <summary>
            Session variable that contains comma seperate list of performance Ids, price types, and quantities. It is expected that the query string passed in
            will be in the format PERFORMANCEID_PRICEYPE_QUANITY,PERFORMANCEID_PRICEYPE_QUANITY (ex: PerformanceIDs=15118_993_1,15212_993_1)
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFlexSeatSelectionControl.CurrentCart">
            <summary>
            Returns the currently loaded cart
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplateUserControl.#ctor">
            <summary>
            Constructor that runs a Page_Load
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.TessituraIntegration.CustomTemplateUserControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Page_Load event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplateUserControl.EpiPageAppSettingString">
            <summary>
            Key for the app setting with the value of the episerver page ID
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplateUserControl.CMSPage">
            <summary>
            PageData for the custom CMS page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplateUserControl.EpiPage">
            <summary>
            PageReference for the custom CMS page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.TessituraIntegration.CustomTemplateUserControl.EpiPageId">
            <summary>
            Page ID of the custom CMS page
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.FriendSeat">
            <summary>
            Facebook seat
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.Common.TheaterSharedRoundupHelper">
            <summary>
            Helper class that contains shared logic for getting round up formulas - Able be overridden in the object factory
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedRoundupHelper.Get">
            <summary>
            Returns the TheaterSharedRoundupHelper from the repository
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedRoundupHelper.GetFormula(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Based on the values passed in from the configuration, evaluations the formula in the following order:
            1. Donation Stored Proc
            2. Donation User Attribute
            3. Formula Passed in
            </summary>
            <param name="donationStoredProcId">Stored Proc ID to evaluate (0 if none)</param>
            <param name="donationUserAttributeKeywordNumber">User Attribute to evaluate (0 if none)</param>
            <param name="donationUserAttributeRemoval">Whether to remove user attribute after evaluation</param>
            <param name="formula">Formula to evaluate (default value)</param>
            <returns>String Formula for donation roundup</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedRoundupHelper.GetStoredProcFormula(System.Int32)">
            <summary>
            Based on the donation stored proc id passed in - Evaluates the stored proc with the parameters: customer_no, order_no, order_total. If 0 is
            passed in, returns string.Empty
            </summary>
            <param name="donationStoredProcId">Stored Proc ID to evalaute</param>
            <returns>Stored proc value or string.Empty if 0 is passed in</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.Common.TheaterSharedRoundupHelper.GetDonationUserAttributeValue(System.Int32,System.Boolean)">
            <summary>
            Based on the user attribute ID passed in, returns the value from teh attribute. If bool flag is true, the user attribute will be removed from the account.
            If 0 is passed in, returns string.Empty
            </summary>
            <param name="donationUserAttributeKeywordNumber">User Attribute Id to evalute</param>
            <param name="donationUserAttributeRemoval">Whether or not to remove the user attribute after evaluation</param>
            <returns>Value in user attribute or string.Empty is id is 0</returns>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseCourseListControl">
            <summary>
            Base Course List Control - Contains shared logic for the course list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseCourseListControl.CourseConfiguration">
            <summary>
            Returns Course Configuration object populated from EpiServer based on the CourseRegistrationConfigId app setting.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfigCollection.#ctor">
            <summary>
            Default Constructor - Instantiates collection
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfigCollection.GetIDCollection(System.Int32)">
            <summary>
            Based on the folder id passed in, populates a collection of IDConfigs and returns
            </summary>
            <param name="idValueCollection">Folder Id in EpiServer</param>
            <returns>Populated IDValueCollection object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.IDValueConfigCollection.GetValueByID(System.Int32,System.String)">
            <summary>
            Iterates over the collection and returns the value from the dictionary. Returns default value if not fuond
            </summary>
            <param name="id">Key Value</param>
            <param name="defaultValue">Default Value to return</param>
            <returns>Value based on key or default value if not found</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.IDValueConfigCollection.IDValueCollection">
            <summary>
            Contains a list of ID value config objects
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BasePromoControl.ApplyPromo(System.String)">
            <summary>
            Tries to apply the promo to the session. Returns true on success
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BasePromoControl.ApplyPromo(System.Int32)">
            <summary>
            Tries to apply the promo to the session. Returns true on success
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BasePromoControl.RedirectToReturnUrl">
            <summary>
            Redirects to the return url set in the session variables
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePromoControl.CurrentPromoDetails">
            <summary>
            Returns current promo code details applied to the session
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePromoControl.CurrentPromoCode">
            <summary>
            Returns current promo code applied to the session
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePromoControl.IsDefaultPromo">
            <summary>
            Returns true if the promo code is the default promo code
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePromoControl.CurrentUser">
            <summary>
            Returns the currently logged in user
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePromoControl.PromoConflictPageReference">
            <summary>
            Page Reference to Mos Conflict Page Data in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BasePromoControl.CurrentCart">
            <summary>
            Returns the session's current cart
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseConfirmationControl">
            <summary>
            Base Confirmation Control - Contains shared session variables and the EpiServer controls for the confirmation controls
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseConfirmationControl.CurrentUser">
            <summary>
            Returns the currently logged in user
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseConfirmationControl.CurrentCart">
            <summary>
            Returns the current cart
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseConfirmationControl.ConfirmationPageContent">
            <summary>
            Confirmation Content Page from EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig">
            <summary>
            Represents the Course Registration Configuration from EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.#ctor">
            <summary>
            Default Constructor - Setups default values for the object
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.GetCourseRegistrationConfig(System.Int32)">
            <summary>
            Gets and populates the course registartion config object from EpiServer
            </summary>
            <param name="courseContentPageId">Content ID in EpiServer</param>
            <returns>Populated course registration config object</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.FilterConfigurationId">
            <summary>
            ID of the page to use for the Filters on the course list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.DefaultKeyword">
            <summary>
            Default keyword to select on the course list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.MOS">
            <summary>
            MOS to switch the user into/used to search on the performance criteria object.
            If not filled in, then use the default MOS
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.CourseListHeader">
            <summary>
            Header for the course list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.CourseListDescription">
            <summary>
            Description paragraph for the course list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.CourseSortColumn">
            <summary>
            Column to sort the returned course performances on
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.NoResultsText">
            <summary>
            Text displayed if no courses were returned after filtering
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CourseRegistrationConfig.NoDefaultKeywordSet">
            <summary>
            Text displayed if no default keyword was set
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CourseConfigurationFilterType">
            <summary>
            The types that a course can be filtered on
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.EpiServerConfig.CourseConfigurationFilterType.Season">
            <summary>
            Filter by Performance season Id
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.EpiServerConfig.CourseConfigurationFilterType.Keyword">
            <summary>
            Filter by Performance Keyword
            </summary>
        </member>
        <member name="F:TheaterTemplate.Shared.EpiServerConfig.CourseConfigurationFilterType.Venue">
            <summary>
            Filter by Performance Venue
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.FriendProduction">
            <summary>
            Facebook Production
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.PerformanceObjects.FriendReservation">
            <summary>
            A user's seating info, friend id, and allowed friend ids
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PackageListConfig">
            <summary>
            Represents the Package List Page Type from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageListConfig.#ctor">
            <summary>
            Protected Constructor - Instantiates defaults
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageListConfig.GetPackageList(System.Int32)">
            <summary>
            Gets the package list object from EPiServer and fills
            </summary>
            <param name="pageId">Page Id to get from EPiServer</param>
            <returns>Populated package list object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageListConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the collection and properties based on the object passed in
            </summary>
            <param name="packageListReference">Page Reference of Package List page</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageListConfig.MainBody">
            <summary>
            Main body to display on the package list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageListConfig.PackageDetailPages">
            <summary>
            List of package details contained as children pages
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.KeyImageConfig">
            <summary>
            Represents a key value pair collection where the value is an image location
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.KeyImageConfig.#ctor">
            <summary>
            Protected constructor - Instantiates collection
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.KeyImageConfig.GetKeyImageConfig(System.Int32)">
            <summary>
            Creates an fills the key image config based on the EpiServer page id passed in
            </summary>
            <param name="pageId">Page Id in EpiServer</param>
            <returns>Populated Key Image config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.KeyImageConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the key image collection with the page data from EpiServer
            </summary>
            <param name="filterData">Page Data from EpiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.KeyImageConfig.KeyImageLocations">
            <summary>
            A dictionary of key and image locations
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig">
            <summary>
            Cart Donation Config - Class representation of class donation object from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.GetDonationConfig(System.Int32)">
            <summary>
            Gets and fills the CartDonationConfig object based on the Page Id passed in
            </summary>
            <param name="pageId">Page Id in EPiServer</param>
            <returns>Fill Cart Donation Config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the object from within a lock
            </summary>
            <param name="donationPage">EPiServer page data</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.Filled">
            <summary>
            Whether or not the Config has been filled
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.PageId">
            <summary>
            Page ID in EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.MainImage">
            <summary>
            Image to display on the cart contribution page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.MainBody">
            <summary>
            Body text to display on the cart contribution page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.SkipCheckoutDonationStep">
            <summary>
            Whether or not to skip this step and move onto the checkout page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.ContributionFundId">
            <summary>
            Fund ID to use for contributions. 
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.ContributionAccountMethodId">
            <summary>
            Account method id to use.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.TimerText">
            <summary>
            Timer Text display - Must contain - {0} for string format
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.SuggestedDonationLabel">
            <summary>
            Label displayed next to the suggested donation
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.DonationStoredProcId">
            <summary>
            ID to use for donation formula
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.DonationUserAttributeKeywordNumber">
            <summary>
            Keyword that will contain the amount to use for the suggest formula
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.DonationUserAttributeRemoval">
            <summary>
            Whether or not to remove attribute if the user donates the correct amount
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.Formula">
            <summary>
            Javascript formula to use for the suggested donation
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.InvalidDonationError">
            <summary>
            Error displayed when the user enters an invalid donation.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CartDonationConfig.AddToCartError">
            <summary>
            Error displayed when the donation fails to add to the cart.
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection">
            <summary>
            A class that representa a collection of venue items.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.#ctor">
            <summary>
            Base constructor - Instantiates list objects
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetVenueConfig(System.Int32)">
            <summary>
            Returns the venue configuration object associated with the venue id from the venues collection or null if not found.
            </summary>
            <param name="venueId">Venue id to search for</param>
            <returns>VenueConfig associated with the venue id or null if not found</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetVenueName(System.Int32,System.String)">
            <summary>
            Returns the venue name from EPiSErver associated with the venue id. If not found, returns default value.
            </summary>
            <param name="venueId">VenueId to search for</param>
            <param name="defaultValue">Default value if not found</param>
            <returns>Venue Name</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetVenues(System.Int32)">
            <summary>
            Based on the EpiServer page id passed in, populates the venues collection with venue config objects.
            </summary>
            <param name="venueFolderId">Id of the Venue Configuration page in EpiServer</param>
            <returns>A fully populated VenueConfigCollection object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetVenueOrdering(System.Collections.Generic.List{System.Int32})">
            <summary>
            Takes a list of venue IDs and based upon the sort order of the venue config objects
            contained in the VenueCollection, order the list and return it.
            </summary>
            <param name="venueIds">List of Venue Ids to order</param>
            <returns>List of Venue Ids sorted by Sort Order of the VenueCollection object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetVenueOrdering(System.Collections.Generic.List{Adage.Tessitura.Package})">
            <summary>
            Based on the venue collection and the packages to sort, sort the list of packages.
            </summary>
            <param name="packagesToSort">List of Packages to sort</param>
            <returns>Sorted list</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetVenueOrdering(System.Collections.Generic.List{Adage.Tessitura.CartObjects.PackageLineItem})">
            <summary>
            Based on the venue collection and the packages items to sort, sort the list of packages item.
            </summary>
            <param name="packagesToSort">List of Packages Items to sort</param>
            <returns>Sorted list</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.GetCalendarVenues">
            <summary>
            Returns a list of venue configurations that are marked as show on calenar
            </summary>
            <returns>List of venue configs that will show on the calendar</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfigCollection.VenueCollection">
            <summary>
            List of VenueConfig objects populated from EpiServer
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.VenueConfig">
            <summary>
            A class that represents an individual venue configuration Page Type in EpiServer.
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the venue object with page data from EpiServer
            </summary>
            <param name="venuePageData">Venue Configuration Page Type Data from EpiServer</param>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.VenueId">
            <summary>
            Venue Id of Venue
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.VenueName">
            <summary>
            Returns the venue name configured in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.IsGeneralAdmission">
            <summary>
            Returns whether or the venue is general admission seating only
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.VenueImageUrl">
            <summary>
            Image UrL for the venue
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.VenueAdditionalInfo">
            <summary>
            Additional information to be displayed below the section information
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.VenueLinks">
            <summary>
            A list of venue links with link text as the key and link url as the value
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.SortOrder">
            <summary>
            Sort order to display the venue in
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.HideGeneralAdmissionSeats">
            <summary>
            Whether or not to display General admission venue seats - Based on a visitor group value
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.GeneralAdmissionSectionText">
            <summary>
            General Admission Section Text - Populated from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.ShowOnCalendar">
            <summary>
            Whether or not to show this venue on the calendar
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.CalendarHighlightColor">
            <summary>
            Color to use to highlight venue on the calendar
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.VenueConfig.ReservePageContent">
            <summary>
            Content to show on reserve page
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig">
            <summary>
            Calendar Config - Contains fields populated from EpiServer that drives the calendar page
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.#ctor">
            <summary>
            Protected constructor - Sets defaults on fields
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.GetCalendarConfig(System.Int32)">
            <summary>
            Based on the configuration ID passed in, populates/returns a  populated Calendar Config object 
            </summary>
            <param name="configurationId">Configuration Id</param>
            <returns>Populated Calendar Config object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills within a lock block
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.GetPerformancesCriteria">
            <summary>
            Based on the populated calendar config object, returns a populated Performances Criteria object
            </summary>
            <returns>A populated performances criteria object</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.GetListOfMonths">
            <summary>
            Returns list of months based on the start/end dates
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.GetStartDateToUse">
            <summary>
            Returns start date to use based on the current value
            </summary>
            <returns>Start Date to Use</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.GetEndDateToUse">
            <summary>
            Returns end date to use based on the current value
            </summary>
            <returns>End Date to Use</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.StartDate">
            <summary>
            Start date to filter performance search on
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.EndDate">
            <summary>
            End date to filter performance search on
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.CalendarKeyword">
            <summary>
            Calendar keyword to use for performances
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.Header">
            <summary>
            The header for the calendar page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.AdditionalInformation">
            <summary>
            Additional information to be displayed on the calendar page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.PromoHighlightColor">
            <summary>
            Color used to highlight promotion performances on the calendar
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.CalendarConfig.PromoLegendText">
            <summary>
            Promo Legend Text - Text to display next to the promo legend color
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig">
            <summary>
            Represents a Package Detail Page Type from EPiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.#ctor">
            <summary>
            Default Constructor - Sets up default values
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.GetPackageDetail(System.Int32)">
            <summary>
            Gets the package detail config based on the page id passed in
            </summary>
            <param name="pageId">Page Id to use</param>
            <returns>Populated package detail</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.FillFromLock(EPiServer.Core.PageData)">
            <summary>
            Fills the package detail object with the page data passed in.
            </summary>
            <param name="packageDetailPage">Page Data from EPiServer</param>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.GetVenuePackages(System.Int32)">
            <summary>
            Based on the package tabs and the venue id passed in, retrieves the packages associated with the venue id
            </summary>
            <param name="venueId">Venue Id to retrieve</param>
            <returns>Populated package criteria object</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.Heading">
            <summary>
            Headings for the package list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.SubscribeButtonText">
            <summary>
            Text to be displayed on the subscribe now button.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.LearnMoreButtonText">
            <summary>
            Text to be displayed on the learn more button.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.RenewButtonText">
            <summary>
            Override for renew button text
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.HeadingNoHtml">
            <summary>
            Headings for the package list page - HTML stripped out
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.DetailHeading">
            <summary>
            Heading for the package detail page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.PackageIds">
            <summary>
            List of Package Ids associated with the package detail. Used to populate the performances displayed
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.SubscriptionDetail">
            <summary>
            The text displayed on the subscription detail page for the subscription being viewed.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.SubscriptionSummary">
            <summary>
            Summary displayed on the package list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.PriceRange">
            <summary>
            Price range text that is displayed in the menu area - Optional
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.LearnMoreURL">
            <summary>
            URL for the package detail page displayed on the list page - If not supplied there is no
            link displayed
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.SubscribeNowUrl">
            <summary>
            URL to subscribe the package being viewed. If not supplied, then no link is shown
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.ShowLearnMoreLink">
            <summary>
            Whether or not to show the learn more link on the package list page. 
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.ShowSubscribeLink">
            <summary>
            Whether or not to show the subscribe link on the package list page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.ShowRenewalButton">
            <summary>
            Whether or not to show the renewal button on the page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.IsFlexPackage">
            <summary>
            Whether or not the package detail is for a flex package
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.FlexPackageId">
            <summary>
            If flex package Id is selected, the ID to use.
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.FilterConfigurationId">
            <summary>
            Id of the page to use for the filter configuration
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.MaxPerTab">
            <summary>
            The Maximum allowed to be reserved per tab
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.MOS">
            <summary>
            The MOS to use for the current package detail
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.PackageTabs">
            <summary>
            The list of package tabs for the package selection page
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.EpiServerConfig.PackageDetailConfig.AllowedPriceTypes">
            <summary>
            The list of allowed price type IDs for the package
            </summary>
        </member>
        <member name="T:TheaterTemplate.Shared.EpiServerConfig.CSIConfig">
            <summary>
            Represents a CSI Configuration Page in EpiServer
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.EpiServerConfig.CSIConfig.GetCSIFromEpiServer(System.Int32)">
            <summary>
            Finds the CSI config page in EpiServer and constructs a CSI object from it. Returns null
            if the page ID doesn't match a CSI config page
            </summary>
            <returns>Populated CSI object from EpiServer or null if not found</returns>
        </member>
        <member name="T:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection">
            <summary>
            Base Full Seat Selection Control - Contains shared properties/logic for reserving seats
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.PopulatePackageCollections">
            <summary>
            Based on the session variable Package IDs, parses the value into the PackagePriceTypes and Current Packages
            collection
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.ResetPackageCollections">
            <summary>
            Resets performance collection to original value
            </summary>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.GetVenuePackages(System.Int32,System.Int32)">
            <summary>
            Returns a list of packages from the current configured criteria that have the
            same venue id and are the package to exclude.
            </summary>
            <param name="venueId">Venue Id to filter on</param>
            <param name="packageIdToExclude">Package Id to exclude</param>
            <returns>List of packages</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.ReservePackage(Adage.Tessitura.Package,System.Int32)">
            <summary>
            Based on the package passed in and the section ID, build the reserve request for the package and call reserve package
            </summary>
            <param name="packageToReserve">Package To Reserve</param>
            <param name="sectionId">Section id of selected section</param>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.BuildRequestPriceType(System.Int32,Adage.Tessitura.ReserveRequest)">
            <summary>
            Based on the Package Price Types collection and the package ID passed in, build the selected 
            price types for each individual reseve request
            </summary>
            <param name="packageId">Package Id of the request</param>
            <param name="reserveRequest">Reserve Request to populate</param>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.GetLineItemsFromPackages(System.Collections.Generic.List{Adage.Tessitura.Package})">
            <summary>
            Based on the list of packages passed in, search through cart to find matching package line items
            </summary>
            <param name="packages">Packages related to line items to search for</param>
            <returns>List of line items associated with packages passed in</returns>
        </member>
        <member name="M:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.FindPackageLineItem(Adage.Tessitura.Package)">
            <summary>
            Based on the package passed in and on whether or not Master Packages are allowed. Search for a matching package line item in the cart.
            Returns null if not found.
            </summary>
            <param name="currentPackage">Package to search for in the cart</param>
            <returns>Package line item associated with current package, null if not found.</returns>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.VenueConfigurations">
            <summary>
            Returns the Venue Collections setup in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.SectionConfiguration">
            <summary>
            Section Configuration object populated from EpiServer. Contains detail section descriptions
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.PriceTypeConfiguration">
            <summary>
            Price Type Configuration Object Populated from EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.PackagePriceTypes">
            <summary>
            Collection of each package ID selected with each price type and quantity
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.CurrentPackages">
            <summary>
            List of packages being reserved based on the the query string value
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.ConfigId">
            <summary>
            Returns the config ID of the current package in EpiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.CurrentPackageConfig">
            <summary>
            The current package configuration object populated from EPiServer
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.MasterPackageName">
            <summary>
            If there is a Config ID associated with the page, pull down the master package name from the Heading Property
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.PackageIds">
            <summary>
            Session variable that contains comma seperate list of package Ids, price types, and quantities
            </summary>
        </member>
        <member name="P:TheaterTemplate.Shared.BaseControls.BaseFullSeatSelection.CurrentCart">
            <summary>
            Returns the currently loaded cart
            </summary>
        </member>
    </members>
</doc>
